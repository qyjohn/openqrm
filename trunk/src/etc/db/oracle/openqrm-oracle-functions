#!/bin/bash
# openQRM oracle-specfic functions
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#

if [ "$OPENQRM_SERVER_BASE_DIR" == "" ]; then
	echo "ERROR: Please export OPENQRM_SERVER_BASE_DIR before sourcing $0"
	exit 1
fi

. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
OPENQRM_DATABASE_INIT="$OPENQRM_SERVER_BASE_DIR/openqrm/etc/db/oracle/openqrm-oracle-init.sql"
OPENQRM_DATABASE_INIT_TMP="/tmp/openqrm-oracle-init.sql"


function initialize_database() {

	if ! which sqlplus 1>/dev/null 2>&1; then
		echo "ERROR: Oracle client 'sqlplus' not installed/found on this system"
		return 1
	else
		ORACLE_CLIENT=`which sqlplus`
	fi

	echo "Initializing the openQRM-database"
	cat $OPENQRM_DATABASE_INIT |	\
		sed -e "s/OPENQRM_SERVER_IP_ADDRESS/$OPENQRM_SERVER_IP_ADDRESS/g"	\
		> $OPENQRM_DATABASE_INIT_TMP
	$ORACLE_CLIENT $OPENQRM_DATABASE_USER/$OPENQRM_DATABASE_PASSWORD@$OPENQRM_DATABASE_NAME @$OPENQRM_DATABASE_INIT_TMP
	return $?
}


function backup_database() {
	local SQL=$1
	echo "Creating backup of the openQRM-database at $SQL"
	echo "NOTICE: Backup for Oracle databases not yet implemented"
	return $RET

}

function restore_database() {
	local SQL=$1
	echo "Restoring the openQRM-database from $SQL"
	echo "NOTICE: Restore for Oracle databases not yet implemented"
	return $RET

}

function drop_database() {
	echo "Dropping the openQRM-database"
	echo "NOTICE: Drop for Oracle databases not yet implemented"
	return $RET
}



case "$1" in
	init)
		initialize_database
		;;
	backup)
		backup_database $2
		;;
	restore)
		restore_database $2
		;;
	drop)
		drop_database
		;;
esac
