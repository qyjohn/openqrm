#!/bin/bash
# this is the package function file for openQRM
# only functions needed for packaging should go in here
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#

if [ "$OPENQRM_SERVER_BASE_DIR" == "" ]; then
	echo "ERROR: Please export OPENQRM_SERVER_BASE_DIR before sourcing $0"
	exit 1
fi
if [ "$OPENQRM_SOURCE_DIR" == "" ]; then
	echo "ERROR: Please export OPENQRM_SOURCE_DIR before sourcing $0"
	exit 1
fi

# get the openqrm-server configuration + functions
if [ -f $OPENQRM_SOURCE_DIR/etc/openqrm-server.conf ]; then
	. $OPENQRM_SOURCE_DIR/etc/openqrm-server.conf
	. $OPENQRM_SOURCE_DIR/include/openqrm-functions
	for VAR in `cat $OPENQRM_SOURCE_DIR/etc/openqrm-server.conf | grep -v ^# | grep OPENQRM | cut -d'=' -f1`; do
		eval `export $VAR`
	done
fi
# get distribution
export OPENQRM_PACKAGE_DISTRIBUTION=`openqrm_get_distro`

#
# Install a system dependency using the system's package manager
#
# $1: package name
# returns the return code of the package manager; the only reliable check is
# to check for a non-zero returncode (which means an error has occurred).
#
function openqrm_install_os_dependency() {
	local PACKAGE=$1
	# check which dependencies to use
    if [ -f /etc/debian_version ]; then
    	WHOAMI=`whoami`
    	if [ "$WHOAMI" != "root" ]; then
    		export SUDO="sudo"
    	fi
        $SUDO apt-get update
    	if [ "$FORCE_INSTALL" == "true" ]; then
	    	$SUDO apt-get -y install $PACKAGE
	    else
	    	$SUDO apt-get install $PACKAGE
	    fi
    elif [ -f /etc/redhat-release ]; then
    	if [ "$FORCE_INSTALL" == "true" ]; then
			su - root -c "yum -y install $PACKAGE"
		else
			su - root -c "yum install $PACKAGE"
		fi

    elif [ -f /etc/SuSE-release ]; then
    	if [ "$FORCE_INSTALL" == "true" ]; then
	    	su - root -c "rpm -e --nodeps $PACKAGE"
		fi
		# special handling for SUSE and zypper. We get a 0 return code,
		# even if the requested package is not available. This wrapper
		# returns 1 if the package is not found.
		local TMPFILE=$OPENQRM_BUILD_TMP_DIR/$(basename $0).$RANDOM.txt
		LC_ALL=C su - root -c "zypper --non-interactive install $PACKAGE" 2>&1 | tee "$TMPFILE"
		local RETURNCODE=${PIPESTATUS[0]}
		if cat "$TMPFILE" | grep -c "not found" >/dev/null ; then
			rm "$TMPFILE"
			return 1;
		else
			rm "$TMPFILE"
			return $RETURNCODE
		fi
	fi
}


function openqrm_check_requirements() {
	if [ ! -d "$OPENQRM_SERVER_BASE_DIR/openqrm/plugins" ]; then
		print_error "$OPENQRM_SERVER_BASE_DIR/openqrm/plugins does not exist. Run make check after installing openQRM!"
		return 1
	fi
    export FORCE_INSTALL=true
	# check which dependencies to use
	if [ -f /etc/debian_version ]; then
		print_message "Checking the requirements for Debian/Ubuntu based systems ..."
		OPENQRM_PACKAGE_TYPE=deb
		OPENQRM_DEPENDENCY_CHECK_COMMAND="dpkg -L"
		OPENQRM_PACKAGE_SYSTEM="debian"
	elif [ -f /etc/redhat-release ]; then
		print_message "Checking the requirements for RedHat based systems ..."
		OPENQRM_PACKAGE_TYPE=rpm
		OPENQRM_DEPENDENCY_CHECK_COMMAND="rpm -qs"
		OPENQRM_PACKAGE_SYSTEM="redhat"
	elif [ -f /etc/SuSE-release ]; then
		print_message "Checking the requirements for SUSE based systems ..."
		OPENQRM_PACKAGE_TYPE=rpm
		OPENQRM_DEPENDENCY_CHECK_COMMAND="rpm -qs"
		OPENQRM_PACKAGE_SYSTEM="suse"
	else
		print_notice "NOTICE: Could not find out which dependencies to use" \
			"Please make sure to have all needed components installed!"
		sleep 4
		print_message "... Continuing anyway"
		return 0
	fi

	print_message "openqrm-server requires: $OPENQRM_SERVER_DEPENDENCIES"
	for DEP in `echo $OPENQRM_SERVER_DEPENDENCIES | sed -e "s/,//g"`; do
		if $OPENQRM_DEPENDENCY_CHECK_COMMAND $DEP 1>/dev/null 2>&1; then
			print_message "-> found $DEP installed"
		else
			print_notice "Trying to automatically install $DEP ..."
			openqrm_install_os_dependency $DEP
			if [ $? != 0 ]; then
				print_error "$DEP could not be installed. Please install manually to continue"
				return 1
			fi
		fi
	done


	# get a list of plugins for checking their dependencies
	OPENQRM_PACKAGE_COMPONENT_LIST=`ls $OPENQRM_SERVER_BASE_DIR/openqrm/plugins`
	for OPENQRM_PLUGIN in $OPENQRM_PACKAGE_COMPONENT_LIST; do
		PLUGIN_CONF=$OPENQRM_SOURCE_DIR/plugins/$OPENQRM_PLUGIN/etc/openqrm-plugin-$OPENQRM_PLUGIN"".conf
		if [ -f $PLUGIN_CONF ]; then
			. $PLUGIN_CONF
		else
			print_notice "openqrm-plugin-$OPENQRM_PLUGIN has no config file. Unable to check dependencies!"
			continue
		fi
		print_message "openqrm-plugin-$OPENQRM_PLUGIN requires: `echo $OPENQRM_PLUGIN_DEPENDENCIES | sed -e "s/openqrm-server//g"`"
		for DEP in `echo $OPENQRM_PLUGIN_DEPENDENCIES | sed -e "s/,//g" | sed -e "s/openqrm-server//g"`; do
			if $OPENQRM_DEPENDENCY_CHECK_COMMAND $DEP 1>/dev/null 2>&1; then
				print_message "-> found $DEP installed"
			else
				print_notice "Trying to automatically install $DEP ..."
				openqrm_install_os_dependency $DEP
				if [ $? != 0 ]; then
					print_error "$DEP could not be installed. Please install manually to continue"
					return 1
				fi
			fi
		done
	done
	print_message "Checking for required components finished successfully"
}



function openqrm_package() {

	if [ -f /etc/debian_version ]; then
		OPENQRM_PACKAGE_TYPE=deb
	else
		OPENQRM_PACKAGE_TYPE=rpm
	fi
	print_message "Creating $OPENQRM_PACKAGE_TYPE packages for openQRM-server ver. $OPENQRM_SERVER_VERSION for $OPENQRM_PACKAGE_DISTRIBUTION"

	# which components to build
	OPENQRM_PACKAGE_COMPONENT_LIST=`ls $OPENQRM_SOURCE_DIR/plugins | grep -v Makefile`
	OPENQRM_PACKAGE_COMPONENT_LIST="openqrm-server-entire openqrm-server "`echo $OPENQRM_PACKAGE_COMPONENT_LIST | sed -e "s/\n//g"`
	print_message "Packing the following components: $OPENQRM_PACKAGE_COMPONENT_LIST"

	########################## RPM PACKAGING ##########################

	# decide on rpm or deb package
	if [ "$OPENQRM_PACKAGE_TYPE" == "rpm" ]; then

		OPENQRM_PACKAGE_ARCHITECTURE=` uname -i`
		for OPENQRM_PACKAGE_COMPONENT in $OPENQRM_PACKAGE_COMPONENT_LIST; do

			print_message "Starting rpm packaging for $OPENQRM_PACKAGE_COMPONENT"
			# check if to package the openqrm-server or plugins
			if [ "$OPENQRM_PACKAGE_COMPONENT" == "openqrm-server" ] || [ "$OPENQRM_PACKAGE_COMPONENT" == "openqrm-server-entire" ]; then
				# we package the server (without any plugins)
				print_message "Packaging the openQRM-server"
				if [ "$OPENQRM_PACKAGE_COMPONENT" == "openqrm-server-entire" ]; then
					# we use the same package name for the entire rpm
					OPENQRM_PACKAGE_NAME=openqrm-server
				else
					OPENQRM_PACKAGE_NAME=$OPENQRM_PACKAGE_COMPONENT
				fi

				# set the server dependencies / decide on redhat or suse dependencies
				OPENQRM_PACKAGE_DEPENDENCIES=$OPENQRM_SERVER_DEPENDENCIES
				if [ -f /etc/redhat-release ]; then
					OPENQRM_PACKAGE_SUB_DIR="redhat"
				elif [ -f /etc/SuSE-release ]; then
					OPENQRM_PACKAGE_SUB_DIR="packages"
				fi

				# (re-)create the package tmp dir
				rm -rf $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE
				mkdir -p $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE

				# set postinst + prerm
				OPENQRM_PACKAGE_POSTINSTALL="sh /usr/share/openqrm/etc/init.d/openqrm-server.postinstall"
				OPENQRM_PACKAGE_PREREMOVE="sh /usr/share/openqrm/etc/init.d/openqrm-server.preremove"

				if [ "$OPENQRM_PACKAGE_COMPONENT" == "openqrm-server" ]; then
					# set if we want to just build openqrm-server without any plugins
					OPENQRM_BUILD_POSTINSTALL="rm -rf \$RPM_BUILD_ROOT/usr/share/openqrm/plugins/*"
				else
					# we want to have the entire openQRM in one package
					# so we need to sum up the server + plugin dependencies
					for PLUGIN_DEP in `ls $OPENQRM_SOURCE_DIR/plugins | grep -v Makefile`; do
						. $OPENQRM_PACKAGE_TMP_DIR/packageroot/$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/$PLUGIN_DEP/etc/openqrm-plugin-$PLUGIN_DEP"".conf
						PLUGIN_DEPS_WITHOUT_SERVER=`echo $OPENQRM_PLUGIN_DEPENDENCIES | sed -e "s/,openqrm-server//g" | sed -e "s/, openqrm-server//g"  | sed -e "s/openqrm-server,//g"  | sed -e "s/openqrm-server ,//g" | sed -e "s/openqrm-server//g"`
						if [ "$PLUGIN_DEPS_WITHOUT_SERVER" != "" ]; then
							ALL_PLUGIN_DEPENDENCIES="$ALL_PLUGIN_DEPENDENCIES $PLUGIN_DEPS_WITHOUT_SERVER, "
						fi
					done
					OPENQRM_PACKAGE_DEPENDENCIES=`echo "$OPENQRM_SERVER_DEPENDENCIES, $ALL_PLUGIN_DEPENDENCIES"`
					OPENQRM_PACKAGE_DEPENDENCIES=`echo $OPENQRM_PACKAGE_DEPENDENCIES | sed -e 's/,$//'`
				fi
				# create spec file from template
				cat $OPENQRM_PACKAGE_TMP_DIR/packageroot/$OPENQRM_SERVER_BASE_DIR/openqrm/etc/templates/openqrm-rpm.spec |	\
					sed -e "s/OPENQRM_PACKAGE_NAME/$OPENQRM_PACKAGE_NAME/g" |	\
					sed -e "s/OPENQRM_PACKAGE_VERSION/$OPENQRM_SERVER_VERSION/g" |	\
					sed -e "s/OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_ARCHITECTURE/g" |	\
					sed -e "s/OPENQRM_PACKAGE_DISTRIBUTION/$OPENQRM_PACKAGE_DISTRIBUTION/g" |	\
					sed -e "s/OPENQRM_PACKAGE_DEPENDENCIES/$OPENQRM_PACKAGE_DEPENDENCIES/g" |	\
					sed -e "s#OPENQRM_BUILD_POSTINSTALL#$OPENQRM_BUILD_POSTINSTALL#g" |	\
					sed -e "s#OPENQRM_PACKAGE_POSTINSTALL#$OPENQRM_PACKAGE_POSTINSTALL#g" |	\
					sed -e "s#OPENQRM_PACKAGE_PREREMOVE#$OPENQRM_PACKAGE_PREREMOVE#g"	\
					> $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_NAME.spec
				# for suse
				cp -f  $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_NAME.spec /usr/src/$OPENQRM_PACKAGE_SUB_DIR/SOURCES/$OPENQRM_PACKAGE_NAME.spec

				# create the source package
				rm -rf $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-server-$OPENQRM_SERVER_VERSION
				mkdir -p $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-server-$OPENQRM_SERVER_VERSION
				cp -aR ../src/* $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-server-$OPENQRM_SERVER_VERSION/
				rm -rf `find $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-server-$OPENQRM_SERVER_VERSION/ -name .svn`
				rm -f /usr/src/$OPENQRM_PACKAGE_SUB_DIR/SOURCES/openqrm-server-$OPENQRM_SERVER_VERSION.tgz
				tar -C $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/ -czf /usr/src/$OPENQRM_PACKAGE_SUB_DIR/SOURCES/openqrm-server-$OPENQRM_SERVER_VERSION.tgz openqrm-server-$OPENQRM_SERVER_VERSION/
				rm -rf $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-server-$OPENQRM_SERVER_VERSION
				# build the rpm package
				rpmbuild -bb $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_NAME.spec
				# here we rename the entire package
				if [ "$OPENQRM_PACKAGE_COMPONENT" == "openqrm-server-entire" ]; then
					if [ -f /etc/SuSE-release ]; then
						# somehow suse build with i586 arch
						OPENQRM_PACKAGE_ARCHITECTURE=i586
					fi
					mv /usr/src/$OPENQRM_PACKAGE_SUB_DIR/RPMS/$OPENQRM_PACKAGE_ARCHITECTURE/openqrm-server-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE.rpm /usr/src/$OPENQRM_PACKAGE_SUB_DIR/RPMS/$OPENQRM_PACKAGE_ARCHITECTURE/openqrm-server-entire-$OPENQRM_SERVER_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE.rpm
				fi

			else

				# we package a plugin
				print_message "Packaging the openQRM plugin-$OPENQRM_PACKAGE_COMPONENT"
				OPENQRM_PACKAGE_NAME=openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT

				# get the plugin configuration
				. $OPENQRM_PACKAGE_TMP_DIR/packageroot/$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/$OPENQRM_PACKAGE_COMPONENT/etc/$OPENQRM_PACKAGE_NAME"".conf

				# set the server dependencies / decide on redhat or suse dependencies
				OPENQRM_PACKAGE_DEPENDENCIES=$OPENQRM_PLUGIN_DEPENDENCIES
				if [ -f /etc/redhat-release ]; then
					OPENQRM_PACKAGE_SUB_DIR="redhat"
				elif [ -f /etc/SuSE-release ]; then
					OPENQRM_PACKAGE_SUB_DIR="packages"
				fi

				# (re-)create the package tmp dir
				rm -rf $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE
				mkdir -p $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE

				# set postinst + prerm
				OPENQRM_PACKAGE_POSTINSTALL="sh /usr/share/openqrm/plugins/$OPENQRM_PACKAGE_COMPONENT/etc/init.d/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT.postinstall"
				OPENQRM_PACKAGE_PREREMOVE="sh /usr/share/openqrm/plugins/$OPENQRM_PACKAGE_COMPONENT/etc/init.d/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT.preremove"

				# set if files should include openqrm-server or just a plugin
				OPENQRM_BUILD_POSTINSTALL="mkdir -p \$RPM_BUILD_ROOT/opt_plugin/openqrm/plugins/$OPENQRM_PACKAGE_COMPONENT \&\& cp -aR \$RPM_BUILD_ROOT/usr/share/openqrm/plugins/$OPENQRM_PACKAGE_COMPONENT/* \$RPM_BUILD_ROOT/opt_plugin/openqrm/plugins/$OPENQRM_PACKAGE_COMPONENT/ \&\& rm -rf \$RPM_BUILD_ROOT/usr/share \&\& mv \$RPM_BUILD_ROOT/opt_plugin \$RPM_BUILD_ROOT/usr/share"

				# create spec file from template
				cat $OPENQRM_PACKAGE_TMP_DIR/packageroot/$OPENQRM_SERVER_BASE_DIR/openqrm/etc/templates/openqrm-rpm.spec |	\
					sed -e "s/OPENQRM_PACKAGE_NAME/$OPENQRM_PACKAGE_NAME/g" |	\
					sed -e "s/OPENQRM_PACKAGE_VERSION/$OPENQRM_PLUGIN_VERSION/g" |	\
					sed -e "s/OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_ARCHITECTURE/g" |	\
					sed -e "s/OPENQRM_PACKAGE_DISTRIBUTION/$OPENQRM_PACKAGE_DISTRIBUTION/g" |	\
					sed -e "s/OPENQRM_PACKAGE_DEPENDENCIES/$OPENQRM_PACKAGE_DEPENDENCIES/g" |	\
					sed -e "s#OPENQRM_BUILD_POSTINSTALL#$OPENQRM_BUILD_POSTINSTALL#g" |	\
					sed -e "s#OPENQRM_PACKAGE_POSTINSTALL#$OPENQRM_PACKAGE_POSTINSTALL#g" |	\
					sed -e "s#OPENQRM_PACKAGE_PREREMOVE#$OPENQRM_PACKAGE_PREREMOVE#g"	\
					> $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_NAME.spec
				# for suse
				cp -f  $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_NAME.spec /usr/src/$OPENQRM_PACKAGE_SUB_DIR/SOURCES/$OPENQRM_PACKAGE_NAME.spec

				# create the source package
				rm -rf $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION
				mkdir -p $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION
				cp -aR ../src/* $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION/
				rm -rf `find $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION/ -name CVS`
				rm -f /usr/src/$OPENQRM_PACKAGE_SUB_DIR/SOURCES/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION.tgz
				tar -C $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/ -czf /usr/src/$OPENQRM_PACKAGE_SUB_DIR/SOURCES/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION.tgz openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_PLUGIN_VERSION/
				rm -rf $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/source/openqrm-plugin-$OPENQRM_PACKAGE_COMPONENT-$OPENQRM_SERVER_VERSION

				# build the deb package
				rpmbuild -bb $OPENQRM_PACKAGE_TMP_DIR/openqrm-packaging/$OPENQRM_PACKAGE_NAME-$OPENQRM_PLUGIN_VERSION-$OPENQRM_PACKAGE_DISTRIBUTION.$OPENQRM_PACKAGE_ARCHITECTURE/$OPENQRM_PACKAGE_NAME.spec

			fi

		done

	else
		print_error "package type $OPENQRM_PACKAGE_TYPE not supported yet"
		exit 1
	fi

}



