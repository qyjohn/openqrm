#!/bin/bash
# this is the server function file for openQRM
# only server functions should go in here

if [ "$OPENQRM_SERVER_BASE_DIR" == "" ]; then
	echo "ERROR: Please export OPENQRM_SERVER_BASE_DIR before sourcing $0"
	exit 1
fi

# source the server configuration
OPENQRM_SERVER_CONF=$OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_CONF

# some definitions
OPENQRM_UNWANTED_MODULES="cops.o ipddp.o ltpc.o hdlcdrv.o airo_cs.o aironet4500_cs.o airo.o axnet_cs.o fmvj18x_cs.o ibmtr_cs.o netwave_cs.o nmclan_cs.o pcnet_cs.o ray_cs.o smc91c92_cs.o wavelan_cs.o wvlan_cs.o xirc2ps_cs.o xircom_cb.o xircom_tulip_cb.o ppp_async.o ppp_deflate.o ppp_generic.o ppp_synctty.o wavelan.o wd.o winbond-840.o airo_cs.o airo.o hermes.o orinoco_cs.o orinoco.o orinoco_plx.o orinoco_old_cs.o cops.ko ipddp.ko ltpc.ko hdlcdrv.ko airo_cs.ko aironet4500_cs.ko airo.ko axnet_cs.ko fmvj18x_cs.ko ibmtr_cs.ko netwave_cs.ko nmclan_cs.ko pcnet_cs.ko ray_cs.ko smc91c92_cs.ko wavelan_cs.ko wvlan_cs.ko xirc2ps_cs.ko xircom_cb.ko xircom_tulip_cb.ko ppp_async.ko ppp_deflate.ko ppp_generic.ko ppp_synctty.ko wavelan.ko wd.ko winbond-840.ko airo_cs.ko airo.ko hermes.ko orinoco_cs.ko orinoco.ko orinoco_plx.ko orinoco_old_cs.ko de600.ko de620.ko defxx.ko depca.ko hp100.ko hp.ko hp-plus.ko ne3210.ko ne.ko netwave_cs.ko ipw2100.ko proteon.ko skisa.ko"
OPENQRM_DEFAULT_INITRD_TEMPLATE="$OPENQRM_SERVER_BASE_DIR/openqrm/etc/templates/openqrm-initrd-default.tgz"
OPENQRM_SERVER_LINUXRC="$OPENQRM_SERVER_BASE_DIR/openqrm/etc/templates/openqrm-linuxrc"
OPENQRM_MAX_INITRD_SIZE=128000
OPENQRM_DEFAULT_RAM_DISK_BLOCK_SIZE=1024

# function to export all given configuration from the
# main openQRM-server config file
function openqrm_server_get_config() {
	. $OPENQRM_SERVER_CONF
	for VAR in `cat $OPENQRM_SERVER_CONF | grep -v ^# | grep OPENQRM | cut -d'=' -f1`; do
		eval `export $VAR`
	done
	# get ip configuration
	export OPENQRM_SERVER_IP_ADDRESS=`ifconfig $OPENQRM_SERVER_INTERFACE | grep inet | grep -v inet6 | cut -d':' -f2 | awk {' print $1 '} | head -n 1`
	export OPENQRM_SERVER_BROADCAST_ADDRESS=`ifconfig $OPENQRM_SERVER_INTERFACE | grep inet | grep -v inet6 | cut -d':' -f3 | awk {' print $1 '} | head -n 1`
	export OPENQRM_SERVER_SUBNET_MASK=`ifconfig $OPENQRM_SERVER_INTERFACE | grep inet | grep -v inet6 | cut -d':' -f4 | awk {' print $1 '} | head -n 1`
}
# run immediatly
openqrm_server_get_config



# --------------------------------------------------------------------
# ------------------------- kernel functions -------------------------
# --------------------------------------------------------------------


# function to create kernels
# param 1	: kernel name
# param 2	: kernel-version
# param 3	: path-to-kernel-files
function openqrm_server_create_kernel() {
	OPENQRM_SERVER_KERNEL_NAME=$1
	OPENQRM_SERVER_KERNEL_VERSION=$2
	OPENQRM_SERVER_KERNEL_LOCATION=$3
	
	echo "Creating kernel $OPENQRM_SERVER_KERNEL_NAME version $OPENQRM_SERVER_KERNEL_VERSION"
	# copy kernel + System-map
	cp -a $OPENQRM_SERVER_KERNEL_LOCATION/boot/vmlinuz-$OPENQRM_SERVER_KERNEL_VERSION $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/boot/vmlinuz-$OPENQRM_SERVER_KERNEL_NAME
	cp -a $OPENQRM_SERVER_KERNEL_LOCATION/boot/System.map-$OPENQRM_SERVER_KERNEL_VERSION $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/boot/System.map-$OPENQRM_SERVER_KERNEL_NAME
	# modules
	tar -C $OPENQRM_SERVER_KERNEL_LOCATION/ -czf $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/boot/modules-$OPENQRM_SERVER_KERNEL_NAME.tgz lib
	# initrd
	mkdir -p $OPENQRM_TEMP_DIR/bootimage/$OPENQRM_SERVER_KERNEL_NAME
	mkdir -p $OPENQRM_TEMP_DIR/bootimage/$OPENQRM_SERVER_KERNEL_NAME/lib/modules/$OPENQRM_SERVER_KERNEL_VERSION
	for MODULE in `find $OPENQRM_SERVER_KERNEL_LOCATION/lib/modules/$OPENQRM_SERVER_KERNEL_VERSION/kernel/drivers/net -type f | grep -v wireless`; do
		MODULE_NAME=`echo $MODULE | sed -e "s/.*\///"`
		if ! echo $OPENQRM_UNWANTED_MODULES | grep $MODULE_NAME 1>/dev/null; then
			/bin/cp -f $MODULE $OPENQRM_TEMP_DIR/bootimage/$OPENQRM_SERVER_KERNEL_NAME/lib/modules/$OPENQRM_SERVER_KERNEL_VERSION
		fi
	done
	# unpack the initrd-template
	tar -C $OPENQRM_TEMP_DIR/bootimage/$OPENQRM_SERVER_KERNEL_NAME -xzf $OPENQRM_DEFAULT_INITRD_TEMPLATE

	# check size
	OPENQRM_INITRD_SIZE=`du -s $OPENQRM_TEMP_DIR/bootimage/$OPENQRM_SERVER_KERNEL_NAME/ | awk {' print $1 '}`
	OPENQRM_INITRD_SIZE=$(( QRM_INITRD_SIZE + 16000 ))
	if (( $OPENQRM_INITRD_SIZE > $OPENQRM_MAX_INITRD_SIZE )); then
		echo "ERROR: Initrd got too big"
		return 1
	fi

	# creating the initrd file
	dd if=/dev/zero of=$OPENQRM_TEMP_DIR/bootimage/initrd-$OPENQRM_SERVER_KERNEL_NAME.img bs=1k count=$OPENQRM_INITRD_SIZE
	#get ram block size there is a problem in newer kernels with size 4096
	if [ -f "$OPENQRM_SERVER_KERNEL_LOCATION/boot/config-$OPENQRM_SERVER_KERNEL_VERSION" ]; then
		ram_block_size=`cat $OPENQRM_SERVER_KERNEL_LOCATION/boot/config-$OPENQRM_SERVER_KERNEL_VERSION | grep  CONFIG_BLK_DEV_RAM_BLOCKSIZE | awk -F= '{print $2}'`
		if [ -z $ram_block_size ]; then
			ram_block_size=$OPENQRM_DEFAULT_RAM_DISK_BLOCK_SIZE
		fi
	else
		ram_block_size=$OPENQRM_DEFAULT_RAM_DISK_BLOCK_SIZE
	fi
	mkfs.ext2 -q -b $ram_block_size -F $OPENQRM_TEMP_DIR/bootimage/initrd-$OPENQRM_SERVER_KERNEL_NAME.img
	tune2fs -c 0 -i 0 $OPENQRM_TEMP_DIR/bootimage/initrd-$OPENQRM_SERVER_KERNEL_NAME.img
	mkdir -p $OPENQRM_TEMP_DIR/bootimage/mnt
	mount -o loop $OPENQRM_TEMP_DIR/bootimage/initrd-$OPENQRM_SERVER_KERNEL_NAME.img $OPENQRM_TEMP_DIR/bootimage/mnt
	mv $OPENQRM_TEMP_DIR/bootimage/$OPENQRM_SERVER_KERNEL_NAME/* $OPENQRM_TEMP_DIR/bootimage/mnt/
	# add the openQRM-linuxrc
	rm -f $OPENQRM_TEMP_DIR/bootimage/mnt/linuxrc
	cp $OPENQRM_SERVER_LINUXRC $OPENQRM_TEMP_DIR/bootimage/mnt/linuxrc
	chmod +x $OPENQRM_TEMP_DIR/bootimage/mnt/linuxrc
	umount $OPENQRM_TEMP_DIR/bootimage/mnt
	gzip $OPENQRM_TEMP_DIR/bootimage/initrd-$OPENQRM_SERVER_KERNEL_NAME.img
	mv $OPENQRM_TEMP_DIR/bootimage/initrd-$OPENQRM_SERVER_KERNEL_NAME.img.gz $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/boot/initrd-$OPENQRM_SERVER_KERNEL_NAME.img
	rm -rf $OPENQRM_TEMP_DIR/bootimage
}



# function to add a kernel to the openQRM-server db
# param 1	: kernel name
# param 2	: kernel-version
function openqrm_server_add_kernel() {
	OPENQRM_USER=$1
	OPENQRM_USER_PASSWORD=$2
	OPENQRM_SERVER_KERNEL_NAME=$3
	OPENQRM_SERVER_KERNEL_VERSION=$4
	echo "openQRM-server: Adding kernel $OPENQRM_SERVER_KERNEL_NAME version $OPENQRM_SERVER_KERNEL_VERSION" | logger
	if ! wget -O /dev/null -q --http-user=$OPENQRM_USER --http-password=$OPENQRM_USER_PASSWORD "http://localhost/openqrm/base/server/kernel/kernel-action.php?kernel_command=new_kernel&kernel_name=$OPENQRM_SERVER_KERNEL_NAME&kernel_version=$OPENQRM_SERVER_KERNEL_VERSION"; then
		echo "ERROR: Could not add kernel $OPENQRM_SERVER_KERNEL_NAME to the openQRM-server!" | logger
		return 1
	fi
	return 0
}





# --------------------------------------------------------------------
# ------------------------- deployments functions -------------------------
# --------------------------------------------------------------------

# function to ad a deployment method to the openQRM-server db
# this function is used by the init+uninstall functions of the deployment plugins
# param 1	: username
# param 2	: password
# param 3	: deployment type
# param 4	: deployment name
function openqrm_server_add_deployment_type() {
	OPENQRM_USER=$1
	OPENQRM_USER_PASSWORD=$2
	OPENQRM_SERVER_DEPLOYMENT_TYPE=$3
	OPENQRM_SERVER_DEPLOYMENT_NAME=$4
	echo "openQRM-server: Adding deployment type $OPENQRM_SERVER_DEPLOYMENT_TYPE  to the openQRM-server" | logger
	if ! wget -O /dev/null -q --http-user=$OPENQRM_USER --http-password=$OPENQRM_USER_PASSWORD "http://localhost/openqrm/base/server/image/image-action.php?image_command=add_deployment_type&deployment_type=$OPENQRM_SERVER_DEPLOYMENT_TYPE&deployment_name=$OPENQRM_SERVER_DEPLOYMENT_NAME"; then
		echo "ERROR: Could not add deployment type $OPENQRM_SERVER_DEPLOYMENT_TYPE to the openQRM-server!" | logger
		return 1
	fi
	return 0
}

# function to remove a deployment method to the openQRM-server db
# this function is used by the init+uninstall functions of the deployment plugins
# param 1	: username
# param 2	: password
# param 3	: deployment type
function openqrm_server_remove_deployment_type() {
	OPENQRM_USER=$1
	OPENQRM_USER_PASSWORD=$2
	OPENQRM_SERVER_DEPLOYMENT_TYPE=$3
	echo "openQRM-server: Removing deployment type $OPENQRM_SERVER_DEPLOYMENT_TYPE  from the openQRM-server" | logger
	if ! wget -O /dev/null -q --http-user=$OPENQRM_USER --http-password=$OPENQRM_USER_PASSWORD "http://localhost/openqrm/base/server/image/image-action.php?image_command=remove_deployment_type&deployment_type=$OPENQRM_SERVER_DEPLOYMENT_TYPE"; then
		echo "ERROR: Could not remove deployment type $OPENQRM_SERVER_DEPLOYMENT_TYPE from the openQRM-server!" | logger
		return 1
	fi
	return 0
}




# --------------------------------------------------------------------
# ------------------------- resource functions -----------------------
# --------------------------------------------------------------------



# function adding a new resource to the openQRM-server
# param 1	: resource_id
# param 2	: kernel name
# param 3	: pxelinux.cfg filename
function openqrm_server_create_pxe_config() {
	local RESOURCE_ID=$1
	local KERNEL_NAME=$2
	local RESOURCE_PXELINUXCFG_FILE=$3
	cat $OPENQRM_SERVER_BASE_DIR/openqrm/etc/templates/openqrm-pxelinux |	\
		sed -e "s/OPENQRM_BOOTIMAGE_KERNEL/vmlinuz-$KERNEL_NAME/g" |	\
		sed -e "s/OPENQRM_BOOTIMAGE_INITRD/initrd-$KERNEL_NAME.img/g" |	\
		sed -e "s/OPENQRM_RESOURCE_ID/$RESOURCE_ID/g" |	\
		sed -e "s/OPENQRM_SERVER_IP_ADDRESS/$OPENQRM_SERVER_IP_ADDRESS/g" \
		> $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE
		chmod 777 $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE
}



# function adding a new resource to the openQRM-server
# param 1	: resource_id
# param 2	: resource_mac
# param 3	: resouce_ip
function openqrm_server_add_resource() {
	local RESOURCE_ID=$1
	local RESOURCE_MAC=$2
	local RESOURCE_IP_ADDRESS=$3
	local RESOURCE_PXELINUXCFG_FILE=`echo 01-$RESOURCE_MAC | sed -e "s/:/-/g" | tr '[:upper:]' '[:lower:]'`
	echo "openQRM-server: Adding resource $RESOURCE_ID $RESOURCE_MAC/$RESOURCE_IP_ADDRESS" | logger
	openqrm_server_create_pxe_config $RESOURCE_ID default $RESOURCE_PXELINUXCFG_FILE
}


# function to remove a resource from the openQRM-server
# param 1	: resource_id
# param 2	: resource_mac
function openqrm_remove_resource() {
	local RESOURCE_ID=$1
	local RESOURCE_MAC=$2
	local RESOURCE_PXELINUXCFG_FILE=`echo 01-$RESOURCE_MAC | sed -e "s/:/-/g" | tr '[:upper:]' '[:lower:]'`
	echo "openQRM-server: Removing resource $RESOURCE_ID $RESOURCE_MAC/$RESOURCE_IP_ADDRESS" | logger
	rm -f $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE
}



# function to set a resource net or local boot
# param 1	: resource_id
# param 2	: resource_mac
# param 3	: resouce_ip
function openqrm_server_set_boot() {
	local RESOURCE_BOOT=$1
	local RESOURCE_ID=$2
	local RESOURCE_MAC=$3
	local RESOURCE_IP_ADDRESS=$4
	local RESOURCE_PXELINUXCFG_FILE=`echo 01-$RESOURCE_MAC | sed -e "s/:/-/g" | tr '[:upper:]' '[:lower:]'`
	if [ "$RESOURCE_BOOT" == "net" ]; then
		echo "openQRM-server: Setting resource $RESOURCE_ID $RESOURCE_MAC/$RESOURCE_IP_ADDRESS to netboot" | logger
		openqrm_server_create_pxe_config $RESOURCE_ID default $RESOURCE_PXELINUXCFG_FILE
	else
		echo "openQRM-server: Setting resource $RESOURCE_ID $RESOURCE_MAC/$RESOURCE_IP_ADDRESS to localboot" | logger
		cat $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE | sed -e "s/default.*/default local/g" > $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE.update
		mv $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE.update $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE
		chmod 777 $OPENQRM_SERVER_BASE_DIR/openqrm/tftpboot/pxelinux.cfg/$RESOURCE_PXELINUXCFG_FILE
	fi
}




# function to assign a kernel to a resource
# param 1	: resource_id
# param 2	: resource_mac
# param 3	: resouce_ip
function openqrm_assign_kernel() {
	local RESOURCE_ID=$1
	local RESOURCE_MAC=$2
	local RESOURCE_KERNEL=$3
	local RESOURCE_PXELINUXCFG_FILE=`echo 01-$RESOURCE_MAC | sed -e "s/:/-/g" | tr '[:upper:]' '[:lower:]'`
	echo "openQRM-server: Assigning resource $RESOURCE_ID $RESOURCE_MAC to kernel $RESOURCE_KERNEL" | logger
	openqrm_server_create_pxe_config $RESOURCE_ID $RESOURCE_KERNEL $RESOURCE_PXELINUXCFG_FILE
}









# --------------------------------------------------------------------
# ------------------------- plugin functions -------------------------
# --------------------------------------------------------------------

# function to run a plugin command
# param 1	: plugin_name
function openqrm_server_plugin_command() {
	local PLUGIN_NAME=$1
	local PLUGIN_COMMAND=$2
	local PLUGIN_USER=$3
	local PLUGIN_PASS=$4
	local PLUGIN_INIT_SCRIPT="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/$PLUGIN_NAME/etc/init.d/openqrm-plugin-$PLUGIN_NAME"
	if [ -x $PLUGIN_INIT_SCRIPT ]; then
		echo "openQRM-server: $PLUGIN_COMMAND openQRM plugin $PLUGIN_NAME user $PLUGIN_USER" | logger
		$PLUGIN_INIT_SCRIPT $PLUGIN_COMMAND $PLUGIN_USER $PLUGIN_PASS &
	else
		echo "openQRM-server: $PLUGIN_NAME init script not found or not executable !" | logger
	fi
}



# --------------------------------------------------------------------






