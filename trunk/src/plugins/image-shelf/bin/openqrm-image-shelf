#!/bin/bash

# this script automatically manages image-shelf
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/image-shelf/include/openqrm-plugin-image-shelf-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
openqrm_server_get_config
export LANG=C
export resource_openqrmserver=$OPENQRM_SERVER_IP_ADDRESS

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

function image-shelf_usage() {
	echo "Usage : $0 list <-i image-shelf-url>"
	echo "Usage : $0 get <-i image-shelf-url> <-f filename> <-n storage-server-ip:/path-to-image-dir/> <-d distribution> <-u username> <-p password>"
	exit 1
}


IMAGE_SHELF_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-i)
			IMAGE_SHELF_URL=$2
			shift
			;;
		-f)
			IMAGE_SHELF_FILE=$2
			shift
			;;
		-d)
			IMAGE_SHELF_DISTRIBUTION=$2
			shift
			;;
		-n)
			NFS_STORAGE_SERVER_EXPORT=$2
			shift
			;;
		-u)
			OPENQRM_USERNAME=$2
			shift
			;;
		-p)
			OPENQRM_PASSWORD=$2
			shift
			;;
		*)
			echo "ERROR: Free commandline arguments are not allowed"
			image-shelf_usage
			exit 6
			;;
	esac
	shift
done




# main
if [ "$IMAGE_SHELF_COMMAND" == "" ]; then
	image-shelf_usage
fi



case "$IMAGE_SHELF_COMMAND" in 

	list)
		if [ "$IMAGE_SHELF_URL" == "" ]; then
			image-shelf_usage
		fi
		IMAGE_SHELF_NAME=`echo $IMAGE_SHELF_URL | sed -e "s#http://##g" | cut -d'/' -f1`

		mkdir -p $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/image-shelf/web/image-lists/$IMAGE_SHELF_NAME
		chmod 777 $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/image-shelf/web/image-lists/$IMAGE_SHELF_NAME
		if ! wget -q -O $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/image-shelf/web/image-lists/$IMAGE_SHELF_NAME/image-shelf.conf "$IMAGE_SHELF_URL/image-shelf.conf"; then
			image_shelf_log "image-shelf: Could not download image-shelf.conf from $IMAGE_SHELF_URL/image-shelf.conf !"
			exit 1
		fi
		chmod 777 $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/image-shelf/web/image-lists/$IMAGE_SHELF_NAME/image-shelf.conf
		;;

	get)
		if [ "$IMAGE_SHELF_URL" == "" ]; then
			image-shelf_usage
		fi
		if [ "$IMAGE_SHELF_FILE" == "" ]; then
			image-shelf_usage
		fi
		if [ "$NFS_STORAGE_SERVER_EXPORT" == "" ]; then
			image-shelf_usage
		fi

		IMAGE_SHELF_NAME=`echo $IMAGE_SHELF_URL | sed -e "s#http://##g" | cut -d'/' -f1`
		
		# prepare a temporary mount point
		MOUNTPOINT=`mktemp -d /tmp/$IMAGE_SHELF_NAME.XXXXXXXXXX` || exit 1
		if ! mount -t nfs $NFS_STORAGE_SERVER_EXPORT $MOUNTPOINT; then
			image_shelf_log "ERROR: Could not mount $NFS_STORAGE_SERVER_EXPORT!"
			openqrm_post_event 0 "get" 3 "openqrm-image-shelf" "Could not mount $NFS_STORAGE_SERVER_EXPORT!"
			exit 1
		else
			image_shelf_log "NOTICE: Mounted $NFS_STORAGE_SERVER_EXPORT. Starting the download."
			openqrm_post_event 0 "get" 5 "openqrm-image-shelf" "Mounted $NFS_STORAGE_SERVER_EXPORT. Starting the download."
		fi
		
		# wget the image from the shelf
		if ! wget -O $MOUNTPOINT/$IMAGE_SHELF_FILE $IMAGE_SHELF_URL/$IMAGE_SHELF_FILE; then
			image_shelf_log "ERROR: Could not download Image-template from $IMAGE_SHELF_URL/$IMAGE_SHELF_FILE."
			openqrm_post_event 0 "get" 3 "openqrm-image-shelf" "Could not download Image-template from $IMAGE_SHELF_URL/$IMAGE_SHELF_FILE."
			umount $MOUNTPOINT
			rmdir $MOUNTPOINT
			exit 1
		else
			image_shelf_log "NOTICE: Downloaded $IMAGE_SHELF_URL/$IMAGE_SHELF_FILE to $MOUNTPOINT/$IMAGE_SHELF_FILE."
			openqrm_post_event 0 "get" 5 "openqrm-image-shelf" "Downloaded $IMAGE_SHELF_URL/$IMAGE_SHELF_FILE to $MOUNTPOINT/$IMAGE_SHELF_FILE."
		fi

		# unpack
		if ! tar -C $MOUNTPOINT/ -xzf $MOUNTPOINT/$IMAGE_SHELF_FILE; then
			image_shelf_log "ERROR: Could not unpack Image-template from $IMAGE_SHELF_FILE!"
			openqrm_post_event 0 "get" 3 "openqrm-image-shelf" "Could not unpack Image-template from $IMAGE_SHELF_FILE!"
			umount $MOUNTPOINT
			rmdir $MOUNTPOINT
			exit 1
		else
			image_shelf_log "NOTICE: Unpacked $IMAGE_SHELF_FILE"
			openqrm_post_event 0 "get" 5 "openqrm-image-shelf" "Unpacked $IMAGE_SHELF_FILE"
		fi
		# clean up
		rm -f $MOUNTPOINT/$IMAGE_SHELF_FILE
		
		# create kernel
		# check for initrd-template
		if [ -f $MOUNTPOINT/etc/openqrm/openqrm-initrd-default.tgz ]; then
			INITRD_TEMPLATE="-t $MOUNTPOINT/etc/openqrm/openqrm-initrd-default.tgz"
		fi
		# check for initrd type
		if [ "$IMAGE_SHELF_DISTRIBUTION" == "Redhat" ] || [ "$IMAGE_SHELF_DISTRIBUTION" == "CentOS" ]; then
			INITRD_TYPE="ext2"
		else
			INITRD_TYPE="initramfs"
		fi

		# check for kernel-version
		KERNEL_VERSION=`ls $MOUNTPOINT/lib/modules/ | sort | tail -n1`
		if ! $OPENQRM_SERVER_BASE_DIR/openqrm/bin/openqrm kernel add -n $IMAGE_SHELF_DISTRIBUTION -v $KERNEL_VERSION -u $OPENQRM_USERNAME -p $OPENQRM_PASSWORD -l $MOUNTPOINT/ -i $INITRD_TYPE $INITRD_TEMPLATE; then
			image_shelf_log "ERROR: Could not create kernel from Image-template $IMAGE_SHELF_FILE!"
			openqrm_post_event 0 "get" 3 "openqrm-image-shelf" "Could not create kernel from Image-template $IMAGE_SHELF_FILE!"
			umount $MOUNTPOINT
			rmdir $MOUNTPOINT
			exit 1
		else
			image_shelf_log "NOTICE: Created kernel from Image-template $IMAGE_SHELF_FILE"
			openqrm_post_event 0 "get" 5 "openqrm-image-shelf" "Created kernel from Image-template $IMAGE_SHELF_FILE"
		fi
		
		umount $MOUNTPOINT
		rmdir $MOUNTPOINT
		image_shelf_log "NOTICE: Successfully created Server-image from $IMAGE_SHELF_FILE"
		openqrm_post_event 0 "get" 5 "openqrm-image-shelf" "Successfully created Server-image from $IMAGE_SHELF_FILE"
	
		;;


	*)
		image-shelf_usage
		;;


esac

