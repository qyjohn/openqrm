#!/bin/bash
# this script automatically manages cloud
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/include/openqrm-plugin-cloud-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/etc/openqrm-plugin-cloud.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
openqrm_server_get_config
export resource_openqrmserver=$OPENQRM_SERVER_IP_ADDRESS
export LANG=C
THISDIR=`pwd`

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

if ! which screen 1>/dev/null; then
	echo "ERROR: The 'screen' utility is not installed! Please install and try again."
	cloud_manager_log "ERROR: The 'screen' utility is not installed! Please install and try again."
	exit 6
fi

function cloud_manager_usage() {
	echo "Usage : $0 enable-ssl"
    echo "      : $0 setup-graph <cloud-appliancename> <cloud-username> <cloud-userpassword> "
    echo "      : $0 remove-graph <cloud-appliancename> <cloud-username>"
	exit 1
}


# re-run in background via screen
#if [ "$RUN_IN_BACKGROUND" != "true" ]; then
#	export RUN_IN_BACKGROUND=true
#	SCREEN_NAME=`date +%T%x | sed -e "s/://g" | sed -e "s#/##g"`
#	screen -dmS $SCREEN_NAME $0 $@
#	exit	
#fi



# main
CLOUD_MANAGER_COMMAND=$1
case "$CLOUD_MANAGER_COMMAND" in 


	setup-graph)
        CLOUD_APPLIANCE=$2
        CLOUD_USER=$3
        CLOUD_PASS=$4
        cloud_manager_log openqrm-cloud-manager "Setting up access to collectd graphs for user $CLOUD_USER with password $CLOUD_PASS to appliance $CLOUD_APPLIANCE"
        CLOUD_USER_HTPASSWD="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/cloud-portal/web/user/users/$CLOUD_USER/.htpasswd"
        if [ -f "$CLOUD_USER_HTPASSWD" ]; then
            htpasswd -b $CLOUD_USER_HTPASSWD $CLOUD_USER $CLOUD_PASS
        else
            mkdir -p $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/cloud-portal/web/user/users/$CLOUD_USER
            cat $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/etc/httpd/openqrm-user-htaccess.conf |   \
                sed -e "s#@@CLOUD_USER@@#$CLOUD_USER#g" |   \
                sed -e "s#@@OPENQRM_WEBSERVER_DOCUMENT_ROOT@@#$OPENQRM_WEBSERVER_DOCUMENT_ROOT#g" > $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/cloud-portal/web/user/users/$CLOUD_USER/.htaccess
           htpasswd -c -b $CLOUD_USER_HTPASSWD $CLOUD_USER $CLOUD_PASS
        fi
        cd $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/cloud-portal/web/user/users/$CLOUD_USER
        ln -sf $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/collectd/web/graphs/$CLOUD_APPLIANCE .
        cd $THISDIR
		;;

	remove-graph)
        CLOUD_APPLIANCE=$2
        CLOUD_USER=$3
        CLOUD_PASS=$4
        cloud_manager_log openqrm-cloud-manager "Removing access to collectd graphs for user $CLOUD_USER to appliance $CLOUD_APPLIANCE"
        rm -f $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/cloud-portal/web/user/users/$CLOUD_USER/$CLOUD_APPLIANCE
		;;





	enable-ssl)
        # TODO
		PRIVATE_KEY=$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/etc/ssl/private/private.key
		CERTIFICATE_FILE=$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/cloud/etc/ssl/cerst/openqrm.crt
		VALID_DAYS=3650

		echo Delete old private key and create dir, they may not exist
		mkdir -p `dirname $PRIVATE_KEY`
		mkdir -p `dirname $CERTIFICATE_FILE`
		rm -f $PRIVATE_KEY
		echo Create new private/public-keys without passphrase for server
		openssl genrsa -out $PRIVATE_KEY 1024

		echo Create selfsigned certificate
		rm -f $CERTIFICATE_FILE
		# From man req:
		#  -x509
		#    this option outputs a self signed certificate instead
		#    of a certificate request. This is typically used to
		#    generate a test certificate or a self signed root CA.
		#    The extensions added to the certificate (if any) are
		#    specified in the configuration file.

		openssl req -new \
		        -days $VALID_DAYS \
		        -key $PRIVATE_KEY \
		        -x509 \
		        -out $CERTIFICATE_FILE

		echo private-keyfile is $PRIVATE_KEY
		echo server-certificate-file is $CERTIFICATE_FILE	
		
		# ;) please do the cat/sed-magic for the ssl https.conf here
		# the template you will find in the cloud-plugins etc/httpd/ dir
		# btw: when you source openqrm-server.conf (the main conf file)
		# you will get the doc-root dir for the different supported linux-distris

		
		;;


	*)
		cloud_manager_usage
		;;


esac

