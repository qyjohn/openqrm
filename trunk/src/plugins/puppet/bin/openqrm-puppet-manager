#!/bin/bash
# this script automatically manages puppet
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/puppet/include/openqrm-plugin-puppet-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/puppet/etc/openqrm-plugin-puppet.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
openqrm_server_get_config
export resource_openqrmserver=$OPENQRM_SERVER_IP_ADDRESS
export LANG=C

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

if ! which screen 1>/dev/null; then
	echo "ERROR: The 'screen' utility is not installed! Please install and try again."
	image_shelf_log "ERROR: The 'screen' utility is not installed! Please install and try again."
	exit 6
fi

# the puppet plugin depends on dns working so it needs the dns plugin available+enabled
# puppet autosigning needs a domain name. This we get from the dns-plugin config
if [ ! -f $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/dns/etc/openqrm-plugin-dns.conf ]; then
	echo "ERROR: The openQRM puppet-plugin depends on the dns-plugin. Please enable the dns-plugin first!"
	openqrm_post_event 0 "puppet-plugin" 3 "puppet-plugin" "The openQRM puppet-plugin depends on the dns-plugin. Please enable the dns-plugin first!"
	exit 1
fi
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/dns/etc/openqrm-plugin-dns.conf

function puppet_manager_usage() {
	echo "Usage : $0"
	exit 1
}


# re-run in background via screen
if [ "$RUN_IN_BACKGROUND" != "true" ]; then
	export RUN_IN_BACKGROUND=true
	SCREEN_NAME=`date +%T%x | sed -e "s/://g" | sed -e "s#/##g"`
	screen -dmS $SCREEN_NAME $0 $@
	exit	
fi

PUPPET_MANAGER_COMMAND=$1

# main
case "$PUPPET_MANAGER_COMMAND" in 
	start)
		APPLIANCE_ID=$2
		APPLIANCE_NAME=$3
		APPLIANCE_IP=$4
		puppet_lock aquire
		puppet_log openqrm-puppet-manager "Appliance $APPLIANCE_NAME id $APPLIANCE_ID starting with ip-address $APPLIANCE_IP"
		puppetca --clean $APPLIANCE_NAME.$OPENQRM_SERVER_DOMAIN 2>&1 | logger
		puppet_lock release
		;;
	stop)
		APPLIANCE_ID=$2
		APPLIANCE_NAME=$3
		APPLIANCE_IP=$4
		puppet_lock aquire
		puppet_log openqrm-puppet-manager "Appliance $APPLIANCE_NAME id $APPLIANCE_ID stopping with ip-address $APPLIANCE_IP"
		puppetca --clean $APPLIANCE_NAME.$OPENQRM_SERVER_DOMAIN 2>&1 | logger
		puppet_lock release
		;;
	auto_sign_false)
		puppet_lock aquire
		puppet_log openqrm-puppet-manager "Stopping automatic signing of puppet-ca's"
		rm -f /etc/puppet/autosign.conf
		puppet_lock release
		;;
	auto_sign_true)
		puppet_lock aquire
		puppet_log openqrm-puppet-manager "Started automatic signing of puppet-ca's"
		echo "*.$OPENQRM_SERVER_DOMAIN" > /etc/puppet/autosign.conf
		puppet_lock release
		;;
	*)
		echo "ERROR: Free commandline arguments are not allowed"
		puppet_manager_usage
		exit 6
		;;
esac

