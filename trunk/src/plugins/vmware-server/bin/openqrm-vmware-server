#!/bin/bash

# this script automatically manages vmware-server
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-server/include/openqrm-plugin-vmware-server-functions
if [ -f $OPENQRM_RESOURCE_PARAMETER_FILE ]; then
	. $OPENQRM_RESOURCE_PARAMETER_FILE
	OPENQRM_SERVER_IP=$resource_openqrmserver
elif [ -f $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf ]; then
	. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
	. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
	openqrm_server_get_config
	OPENQRM_SERVER_IP=$OPENQRM_SERVER_IP_ADDRESS
	resource_id=0
fi
OPENQRM_POSTENCODE="$OPENQRM_SERVER_BASE_DIR/openqrm/sbin/openqrm-postencode.py"
OPENQRM_VMWARE_SERVER_VM_TEMPLATE="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-server/etc/templates/openqrm-vmware-server-vm"
# using the vmware-server-tools domain location
OPENQRM_VM_DIR="/var/lib/vmware/openqrm/"
export LANG=C

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

function vmware-server_usage() {
	echo "Usage : $0 start/stop/reboot/add/delete/remove/list <-n vm-name>"
	echo "Usage : $0 create <-n vm-name> <-m mac-address> <-r memory> [-d disk-size ]"
	echo "        $0 post_vm_list <-u username> <-p password>"
	exit 1
}


VMWARE_SERVER_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			VMWARE_SERVER_VM_NAME=$2
			shift
			;;
		-m)
			VMWARE_SERVER_VM_MAC=$2
			shift
			;;
		-r)
			VMWARE_SERVER_VM_RAM=$2
			shift
			;;
		-d)
			VMWARE_SERVER_VM_DISK=$2
			shift
			;;
		-u)
			VMWARE_SERVER_OPENQRM_USERNAME=$2
			shift
			;;
		-p)
			VMWARE_SERVER_OPENQRM_PASSWORD=$2
			shift
			;;
		*)
			echo "ERROR: Free commandline arguments are not allowed"
			vmware-server_usage
			exit 6
			;;
	esac
	shift
done




# main
if [ "$VMWARE_SERVER_COMMAND" == "" ]; then
	vmware-server_usage
fi

if [ "$VMWARE_SERVER_COMMAND" == "post_vm_list" ]; then
		if [ "$VMWARE_SERVER_OPENQRM_USERNAME" == "" ]; then
			vmware-server_usage
		fi
		if [ "$VMWARE_SERVER_OPENQRM_PASSWORD" == "" ]; then
			vmware-server_usage
		fi
else

	if [ "$VMWARE_SERVER_COMMAND" != "list" ]; then
		if [ "$VMWARE_SERVER_VM_NAME" == "" ]; then
			vmware-server_usage
		fi
	fi
fi


case "$VMWARE_SERVER_COMMAND" in 

	create)
		if [ "$VMWARE_SERVER_VM_MAC" == "" ]; then
			vmware-server_usage
		fi
		if [ "$VMWARE_SERVER_VM_RAM" == "" ]; then
			vmware-server_usage
		fi
		vmware_server_lock aquire
		echo "Creating VMware vm $VMWARE_SERVER_VM_NAME -> $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx"
		# creating the vmx
		mkdir -p $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/
		cat $OPENQRM_VMWARE_SERVER_VM_TEMPLATE |	\
			sed -e "s/@@VMWARE_SERVER_VM_NAME@@/$VMWARE_SERVER_VM_NAME/g" |	\
			sed -e "s/@@OPENQRM_RESOURCE_RAM@@/$VMWARE_SERVER_VM_RAM/g"	\
			> $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx

		# disk + swap
		if [ "$VMWARE_SERVER_VM_DISK" != "" ]; then
			echo "-> Creating disk"
			mkdir -p $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME
			vmware-vdiskmanager -c -s $VMWARE_SERVER_VM_DISK""Mb -a ide -t 0 $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmdk
			# add the disk to the config file
			cat $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx |	\
				sed -e "s/^ide/#ide0/g" > $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx.withdisk
			mv -f $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx.withdisk $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx
			cat >> $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx << EOF
ide0:0.present = "TRUE"
ide0:0.fileName = "$VMWARE_SERVER_VM_NAME.vmdk"
ide0:0.writeThrough = "TRUE"
EOF
		fi
		
		# register
		chmod +x $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx
		vmware-cmd -s register $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx
		# start
		vmware-cmd $OPENQRM_VM_DIR/$VMWARE_SERVER_VM_NAME/$VMWARE_SERVER_VM_NAME.vmx start
		vmware_server_lock release
		;;
	add)
		vmware_server_lock aquire
		echo "Adding VMware vm $VMWARE_SERVER_VM_NAME"
		vmware-cmd -s register $VMWARE_SERVER_VM_NAME
		vmware_server_lock release
		;;
	start)
		vmware_server_lock aquire
		echo "Starting VMware vm $VMWARE_SERVER_VM_NAME"
		vmware-cmd $VMWARE_SERVER_VM_NAME start
		vmware_server_lock release
		;;
	stop)
		vmware_server_lock aquire
		echo "Stopping VMware vm $VMWARE_SERVER_VM_NAME"
		vmware-cmd $VMWARE_SERVER_VM_NAME stop hard
		vmware_server_lock release
		;;
	reboot)
		vmware_server_lock aquire
		echo "Rebooting VMware vm $VMWARE_SERVER_VM_NAME"
		vmware-cmd $VMWARE_SERVER_VM_NAME reset hard
		vmware_server_lock release
		;;
	remove)
		vmware_server_lock aquire
		echo "Removing VMware vm $VMWARE_SERVER_VM_NAME"
		vmware-cmd -s unregister $VMWARE_SERVER_VM_NAME
		vmware_server_lock release
		;;
	delete)
		vmware_server_lock aquire
		echo "Deleting VMware vm $VMWARE_SERVER_VM_NAME"
		rm -rf `dirname $VMWARE_SERVER_VM_NAME`
		vmware_server_lock release
		;;
	list)
		echo "Listing VMware vms"
		vmware-cmd -l
		;;
	post_vm_list)
		vmware_server_lock aquire
		echo "Posting vm list to the openQRM-server"
		VM_LIST_TMP=$resource_id.vm_list
		vmware-cmd -l > $VM_LIST_TMP
		# and the not active vms
		find $OPENQRM_VM_DIR/../* -name *.vmx | sed -e "s/^/#/g" >> $VM_LIST_TMP
		if ! wget -q -O /dev/null --http-user=$VMWARE_SERVER_OPENQRM_USERNAME --http-password=$VMWARE_SERVER_OPENQRM_PASSWORD  --post-file=`$OPENQRM_POSTENCODE $VM_LIST_TMP` http://$OPENQRM_SERVER_IP/openqrm/base/plugins/vmware-server/vmware-server-action.php?vmware_server_command=get_vmware_server; then
			echo "ERROR: Could not post vm list to the openQRM-server at $OPENQRM_SERVER_IP!"
			echo "ERROR: Could not post vm list to the openQRM-server at $OPENQRM_SERVER_IP!" | logger
		fi
		rm -f $VM_LIST_TMP
		rm -f $VM_LIST_TMP.post
		vmware_server_lock release
		;;
	*)
		vmware-server_usage
		;;


esac

