#!/bin/bash
# this is the root-mount initrd-service
# which proivdes function to mount/remount the remote
# local-rootfs according to the image_deployment_parameters at /mnt
#
# Optional parameters 
#
# IMAGE_NFS_MOUNT_OPTIONS			- can be e.g. set to proto=tcp for the install/transform phase
#
# get the deployment parameters from openqrm.conf
OPENQRM_RESOURCE_PARAMETER_FILE="/var/openqrm/openqrm-resource.conf"
. $OPENQRM_RESOURCE_PARAMETER_FILE
eval $image_deployment_parameter
eval $resource_capabilities
export OPENQRM_SERVER_BASE_DIR=$resource_basedir
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions

# nfs-options for the install+transform phase
if [ "$IMAGE_NFS_MOUNT_OPTIONS" != "" ]; then
	IMAGE_NFS_MOUNT_OPTIONS=",$IMAGE_NFS_MOUNT_OPTIONS"
fi

#######################################################################
# required functions ##################################################
#######################################################################

function mount_rootfs() {
	modprobe sunrpc 1>/dev/null 2>&1
	modprobe lockd 1>/dev/null 2>&1
	modprobe nfs 1>/dev/null 2>&1
	modprobe ext3 1>/dev/null 2>&1
	rm -rf /dev/null
	mknod -m 666 /dev/null c 1 3
	openqrm_portmap_start

	if ! mount -t nfs -o rw,nolock$IMAGE_NFS_MOUNT_OPTIONS $image_storage_server_ip:$image_rootdevice /mnt; then
		echo "ERROR: Could not mount $image_storage_server_ip:$image_rootdevice by nfs"
		# give a shell for the admin
		/bin/bash
	else
		echo "local-storage: Mounted $image_storage_server_ip:$image_rootdevice rw"
	fi
    echo "local-storage: Getting partimage util"
    cd /
    if ! wget -q http://$resource_openqrmserver/openqrm/boot-service/partimage-ng.tgz; then
		echo "local-storage: Error downloading partimage-ng.tgz package"
        /bin/bash
    fi
    tar -xzf partimage-ng.tgz
    rm -f partimage-ng.tgz

    # grab or restore ?
    if [ "$LOCAL_STORAGE_GRAB" != "" ]; then
        # grab
        echo "local-storage: Starting grab-phase. Transfering disk-content to $image_name"
        # grab all disks
        for HARD_DISK in `cat /proc/partitions | grep -v major | sed -e '/^$/d' | awk {' print $4 '} | grep -v [0-9]`; do
            echo "local-storage: Processing device /dev/$HARD_DISK"
            INAME="/mnt/"$image_name"_x_"$HARD_DISK"_ping.img"
            BSNAME="/mnt/"$image_name"_x_"$HARD_DISK"_bs.img"
            rm -f $INAME $BSNAME
            partimage-ng -b 32 save /dev/$HARD_DISK $INAME
            echo "local-storage: Saving the MBR of /dev/$HARD_DISK"
            dd if=/dev/$HARD_DISK of=$BSNAME bs=512 count=1
        done
        echo "local-storage: Umounting image-store"
        umount /mnt

        # send token to the openQRM server to stop the grab-appliance
        echo "local-storage: Sending 'grab-complete' to the openQRM server"
        if ! wget -q "http://$resource_openqrmserver/openqrm/boot-service/local-storage-state.php?action=grab-complete&token=$LOCAL_STORAGE_GRAB"; then
            echo "local-storage: Error sending 'grab-complete' to the openQRM server"
            /bin/bash
        fi
        # wait for reboot
        echo "local-storage: Preparing system restart. Please stand by ..."
        /bin/bash

    elif [ "$LOCAL_STORAGE_DEPLOYMENT" != "" ]; then
        # restore -> active deployment
        echo "local-storage: Starting restore of $image_name"
        for PING_IMAGE in `ls /mnt/$image_name_x_*_ping.img`; do
            FP_INAME=$image_name"_x_"
            LP_INAME="_ping.img"
            PING_DEV=`echo $PING_IMAGE | sed -e "s/.*$FP_INAME//g" | sed -e "s/$LP_INAME//g"`
            echo "local-storage: Restoring $PING_IMAGE to /dev/$PING_DEV"
            partimage-ng restore $PING_IMAGE /dev/$PING_DEV
            BSNAME=`echo $PING_IMAGE | sed -e "s/_ping/_bs/g"`
            echo "local-storage: Restoring bootsector $BSNAME to /dev/$PING_DEV"
            dd if=$BSNAME of=/dev/$PING_DEV bs=512 count=1
        done
        echo "local-storage: Umounting image-store"
        umount /mnt

        # send token to the openQRM server to set appliance to localboot
        echo "local-storage: Sending 'deployment-complete' to the openQRM server"
        if ! wget -q "http://$resource_openqrmserver/openqrm/boot-service/local-storage-state.php?action=deployment-complete&token=$LOCAL_STORAGE_DEPLOYMENT"; then
            echo "local-storage: Error sending 'deployment-complete' to the openQRM server"
            /bin/bash
        fi
        # wait a bit until the pxe-config is re-written
        echo "local-storage: Preparing local-boot. Please stand by ..."
        sleep 10
        # reboot
        reboot
    fi

}


function remount_rootfs() {
    :
}


function create_fstab() {
    :
}


#######################################################################
# optional functions ##################################################
#######################################################################


# using partimage from grabbing
function grab_rootfs() {
	echo "local-storage: Grabbing $resource_image from $image_rootdevice to image_storage_server_ip:$IMAGE_GRAB_TO"
	# mounting target location
	modprobe sunrpc 1>/dev/null 2>&1
	modprobe lockd 1>/dev/null 2>&1
	modprobe nfs 1>/dev/null 2>&1
	rm -rf /dev/null
	mknod -m 666 /dev/null c 1 3
	openqrm_portmap_start
	mkdir -p /mnt2
	if ! mount -t nfs -o rw,nolock$IMAGE_NFS_MOUNT_OPTIONS $image_storage_server_ip:$IMAGE_GRAB_TO /mnt2; then
		echo "ERROR: Could not mount $image_storage_server_ip:$IMAGE_GRAB_TO by nfs"
		# give a shell for the admin
		/bin/bash
	fi

	echo "local-storage: Started grab-pase. This can take a while ...."
	# grabbing the root partition
	partimage -z1 --nocheck --overwrite --nodesc -f3 -b save $image_rootdevice /mnt2/$image_name
	# saving the mbr
	ROOT_DISK=`echo $image_rootdevice | sed -e "s/[0-9]//g"`
	dd if=$ROOT_DISK of=/mnt2/$image_name.mbr count=1 bs=512
	# saving the extend partitions
	sfdisk -d $ROOT_DISK > /mnt2/$image_name.sf
	echo "local-storage: Grab-phase finished. Continuing boot-up"

	umount /mnt2
	rmdir /mnt2
	openqrm_portmap_stop
}




# using partimage from deploy
function install_rootfs() {
	echo "local-storage: Installing $resource_image from $image_storage_server_ip:$IMAGE_INSTALL_FROM to $image_rootdevice"
	# getting partimage
	if [ ! -x /sbin/partimage ]; then
		cd /sbin
		echo "local-storage: Getting partimage util"
		if ! wget -q http://$resource_openqrmserver/openqrm/boot-service/partimage; then
			/bin/bash
		fi
		chmod +x partimage
		cd /
	fi
	# mounting source location
	modprobe sunrpc 1>/dev/null 2>&1
	modprobe lockd 1>/dev/null 2>&1
	modprobe nfs 1>/dev/null 2>&1
	rm -rf /dev/null
	mknod -m 666 /dev/null c 1 3
	openqrm_portmap_start
	mkdir -p /mnt2
	if ! mount -t nfs -o ro,nolock$IMAGE_NFS_MOUNT_OPTIONS $image_storage_server_ip:$IMAGE_INSTALL_FROM /mnt2; then
		echo "ERROR: Could not mount $image_storage_server_ip:$IMAGE_INSTALL_FROM by nfs"
		# give a shell for the admin
		/bin/bash
	fi

	echo "local-storage: Started install-phase. This can take a while ...."
	# restoring the mbr
	ROOT_DISK=`echo $image_rootdevice | sed -e "s/[0-9]//g"`
	dd if=/mnt2/$image_name.mbr of=$ROOT_DISK
	# restoring the extented partition layout
	sfdisk $ROOT_DISK < /mnt2/$image_name.sf
	partimage -b restore $image_rootdevice /mnt2/$image_name.000
	echo "local-storage: Install-phase finished. Continuing boot-up"

	umount /mnt2
	rmdir /mnt2
	openqrm_portmap_stop
		
}


