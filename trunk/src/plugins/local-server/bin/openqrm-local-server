#!/bin/bash
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#

# This script integrates a local (existing) server into openQRM
# The system then can (should) be set to netboot to gain the full
# advantages and flexibility of the openQRM management platform
OPENQRM_RESOURCE_PARAMETER_FILE="/var/openqrm/openqrm-resource.conf"
export LANGUAGE=C
export LANG=C
export LC_ALL=C


function usage() {
        echo "Usage : $0 integrate -u <user> -p <password> -q <ip-address-of-openQRM-server> [-i <network-interface>]"
        echo "        $0 remove -u <user> -p <password> -q <ip-address-of-openQRM-server>"
}


function openqrm_integrate_local_server() {
	local USER=$1
	local PASSWORD=$2
	local OPENQRM_SERVER=$3
	local INTERFACE=$4
	echo "Integrating system to openQRM-server at $OPENQRM_SERVER"
	mkdir -p `dirname $OPENQRM_RESOURCE_PARAMETER_FILE`
	
	if [ "$INTERFACE" == "" ]; then
		echo "Which network-interface to use for the integration ?"
		ifconfig | cut -d' ' -f1 | sed '/^$/d' | grep -v lo
		echo -n "-> : "
		read INTERFACE
	fi
	# check if exists
	if ! ifconfig $INTERFACE 1>/dev/null; then
		echo "ERROR: Interface $INTERFACE does not exists !"
		exit 1
	fi
	local resource_id=-1
	local resource_ip=`ifconfig $INTERFACE | grep "inet " | cut -d':' -f2 | cut -d' ' -f1`
	local resource_mac=`ifconfig $INTERFACE | grep HWaddr| sed -e "s/.*HWaddr //g" | head -n1`
	# remove whitespaces
	resource_mac=`echo $resource_mac`
	echo "Using $INTERFACE $resource_ip/$resource_mac"
	
	wget -q -O $OPENQRM_RESOURCE_PARAMETER_FILE "http://$OPENQRM_SERVER/openqrm/action/resource-monitor.php?resource_command=get_parameter&resource_id=$resource_id&resource_mac=$resource_mac&resource_ip=$resource_ip"
	. $OPENQRM_RESOURCE_PARAMETER_FILE
	
	echo "Getting openqrm-client package"
    # run default openqrm-client boot-service
    KERNEL_ARCH=`uname -m`
    if echo $KERNEL_ARCH | grep i.*86 1>/dev/null; then
        # i386
        OPENQRM_CLIENT_ARCH=i386
    else
        OPENQRM_CLIENT_ARCH=$KERNEL_ARCH
    fi
    echo "Getting openqrm-client package $OPENQRM_CLIENT_ARCH"
    cd /
    if ! wget -q -O openqrm-client.tgz "http://$OPENQRM_SERVER/openqrm/boot-service/openqrm-client.$OPENQRM_CLIENT_ARCH.tgz"; then
        rm -f openqrm-client.tgz
        echo "WARNING: Failed to get the openqrm-client package arch $OPENQRM_CLIENT_ARCH ! Using default one ..."
        wget -q -O openqrm-client.tgz "http://$OPENQRM_SERVER/openqrm/boot-service/openqrm-client.tgz"
    fi
	tar -xzf openqrm-client.tgz
	rm -f openqrm-client.tgz
	ln -sf $resource_basedir/openqrm/etc/init.d/openqrm-client /etc/init.d/openqrm-client
	export OPENQRM_SERVER_BASE_DIR=$resource_basedir
	. $resource_basedir/openqrm/include/openqrm-functions
	openqrm_chkconfig add openqrm-client
	$resource_basedir/openqrm/etc/init.d/openqrm-client start
	
	# gather some more details to create the appliance on the openQRM-server
	local_server_root_device=`mount | grep ' / ' | awk {' print $1 '}`
	local_server_root_device_type=`mount | grep ' / ' | awk {' print $5 '}`
	local_server_kernel_version=`uname -r`
	
	# now we send the local-integration signal to create
	# the local-server storage, image and appliance
	if ! wget -O /dev/null -q --http-user=$USER --http-password=$PASSWORD "http://$OPENQRM_SERVER/openqrm/base/plugins/local-server/local-server-action.php?local_server_command=integrate&local_server_id=$resource_id&local_server_root_device=$local_server_root_device&local_server_root_device_type=$local_server_root_device_type&local_server_kernel_version=$local_server_kernel_version"; then
		echo "ERROR: Could not create the appliance resource$resouce_id on the openQRM-server!"
		sleep 2
		echo "NOTCIE: Removing the system from openQRM because of errors !"
		openqrm_remove_local_server $USER $PASSWORD $OPENQRM_SERVER
		return 1
	fi
	
	
	
}

function openqrm_remove_local_server() {
	local USER=$1
	local PASSWORD=$2
	local OPENQRM_SERVER=$3
	echo "Removing system from openQRM-server at $OPENQRM_SERVER"
	. $OPENQRM_RESOURCE_PARAMETER_FILE

	# try to remove components from the local-server appliance
	if ! wget -O /dev/null -q --http-user=$USER --http-password=$PASSWORD "http://$OPENQRM_SERVER/openqrm/base/plugins/local-server/local-server-action.php?local_server_command=remove&local_server_id=$resource_id"; then
		echo "WARNING: Could not remove the appliance resource$resouce_id from the openQRM-server!"
	fi

	# remove system from openQRM
	if ! wget -O /dev/null -q --http-user=$USER --http-password=$PASSWORD "http://$OPENQRM_SERVER/openqrm/base/server/resource/resource-action.php?resource_command=remove&resource_id=$resource_id&resource_mac=$resource_mac"; then
		echo "ERROR: Could not remove system from the openQRM-server!"
		return 1
	fi

	export OPENQRM_SERVER_BASE_DIR=$resource_basedir
	. $resource_basedir/openqrm/include/openqrm-functions
	openqrm_chkconfig del openqrm-client
	$resource_basedir/openqrm/etc/init.d/openqrm-client stop
	rm -f $OPENQRM_RESOURCE_PARAMETER_FILE
	rm -rf $resource_basedir/openqrm
	echo "Successfully removed system from openQRM"
}


case "$1" in
	integrate)
		shift
		if [ $# == 0 ]; then
			usage
			exit 0
		fi
		while [ $# -ne 0 ]; do
			case "$1" in
				-u)
					USER=$2
					;;
				-p)
					PASSWORD=$2
					;;			
				-q)
					OPENQRM_SERVER=$2
					;;			
				-i)
					INTERFACE=$2
					;;			
			esac
			shift
		done
		if [ "$USER" == "" ]; then
			echo "ERROR: Missing username !"
			usage
			exit 1
		fi
		if [ "$PASSWORD" == "" ]; then
			echo "PASSWORD: Missing password !"
			usage
			exit 1
		fi
		if [ "$OPENQRM_SERVER" == "" ]; then
			echo "OPENQRM_SERVER: Missing openQRM-server ip-address !"
			usage
			exit 1
		fi
		openqrm_integrate_local_server $USER $PASSWORD $OPENQRM_SERVER $INTERFACE
		;;

	remove)
		shift
		if [ $# == 0 ]; then
			usage
			exit 0
		fi
		while [ $# -ne 0 ]; do
			case "$1" in
				-u)
					USER=$2
					;;
				-p)
					PASSWORD=$2
					;;			
				-q)
					OPENQRM_SERVER=$2
					;;			
			esac
			shift
		done
		if [ "$USER" == "" ]; then
			echo "ERROR: Missing username !"
			usage
			exit 1
		fi
		if [ "$PASSWORD" == "" ]; then
			echo "PASSWORD: Missing password !"
			usage
			exit 1
		fi
		if [ "$OPENQRM_SERVER" == "" ]; then
			echo "OPENQRM_SERVER: Missing openQRM-server ip-address !"
			usage
			exit 1
		fi
		openqrm_remove_local_server $USER $PASSWORD $OPENQRM_SERVER
		;;

	*)
		usage
		exit 0
		;;

esac
		