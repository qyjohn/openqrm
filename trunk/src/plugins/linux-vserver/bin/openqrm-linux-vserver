#!/bin/bash

# this script automatically manages linux-vserver
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/linux-vserver/include/openqrm-plugin-linux-vserver-functions
. /var/openqrm/openqrm-resource.conf
OPENQRM_POSTENCODE="$resource_basedir/openqrm/sbin/openqrm-postencode.py"
OPENQRM_LINUX_VSERVER_VM_TEMPLATE="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/linux-vserver/etc/templates/openqrm-linux-vserver-vm"
# using the linux-vserver-tools domain location
OPENQRM_VM_DIR=/var/lib/vservers/


# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

function linux-vserver_usage() {
	echo "Usage : $0 start/stop/reboot/delete/list <-n vm-name>"
	echo "Usage : $0 create <-n vm-name> <-m mac-address> <-i ip-address> <-r memory> [-d disk-size -s swap-size]"
	echo "        $0 post_vm_list <-u username> <-p password>"
	exit 1
}


LINUX_VSERVER_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			LINUX_VSERVER_VM_NAME=$2
			shift
			;;
		-m)
			LINUX_VSERVER_VM_MAC=$2
			shift
			;;
		-i)
			LINUX_VSERVER_VM_IP=$2
			shift
			;;
		-r)
			LINUX_VSERVER_VM_RAM=$2
			shift
			;;
		-d)
			LINUX_VSERVER_VM_DISK=$2
			shift
			;;
		-s)
			LINUX_VSERVER_VM_SWAP=$2
			shift
			;;
		-u)
			LINUX_VSERVER_OPENQRM_USERNAME=$2
			shift
			;;
		-p)
			LINUX_VSERVER_OPENQRM_PASSWORD=$2
			shift
			;;
		*)
			echo "ERROR: Free commandline arguments are not allowed"
			linux-vserver_usage
			exit 6
			;;
	esac
	shift
done




# main
if [ "$LINUX_VSERVER_COMMAND" == "" ]; then
	linux-vserver_usage
fi

if [ "$LINUX_VSERVER_COMMAND" == "post_vm_list" ]; then
		if [ "$LINUX_VSERVER_OPENQRM_USERNAME" == "" ]; then
			linux-vserver_usage
		fi
		if [ "$LINUX_VSERVER_OPENQRM_PASSWORD" == "" ]; then
			linux-vserver_usage
		fi
else

	if [ "$LINUX_VSERVER_COMMAND" != "list" ]; then
		if [ "$LINUX_VSERVER_VM_NAME" == "" ]; then
			linux-vserver_usage
		fi
	fi
fi


case "$LINUX_VSERVER_COMMAND" in 

	create)
		if [ "$LINUX_VSERVER_VM_MAC" == "" ]; then
			linux-vserver_usage
		fi
		if [ "$LINUX_VSERVER_VM_IP" == "" ]; then
			linux-vserver_usage
		fi
		if [ "$LINUX_VSERVER_VM_RAM" == "" ]; then
			linux-vserver_usage
		fi
		echo "Creating Linux-VServer vm $LINUX_VSERVER_VM_NAME -> /etc/linux-vserver/$LINUX_VSERVER_VM_NAME.cfg"
		# gathering some infos
		if [ "$LINUX_VSERVER_VM_IP" == "dhcp" ]; then
			echo "-> gathering an ip-address for $LINUX_VSERVER_VM_MAC ..."
			if ! linux-vserver_get_next_ip $LINUX_VSERVER_VM_MAC; then
				return 1			
			fi
			export LINUX_VSERVER_VM_IP=$PARTITION_IP
			export OPENQRM_LINUX_VSERVER_SUBNET_MASK=$PARTITION_SUBNET
		else
			export OPENQRM_LINUX_VSERVER_SUBNET_MASK=`ifconfig | grep $resource_ip | cut -d':' -f3 | awk {' print $1 '}`
		fi
		export OPENQRM_LINUX_VSERVER_DEFAULT_GATEWAY=`route -n | grep ^0.0.0.0 | head -n1 | awk {' print $2 '}`
		export OPENQRM_RESOURCE_ID=-1
		export OPENQRM_KERNEL_VERSION=`uname -r`
		# creating the cfg
		cat $OPENQRM_LINUX_VSERVER_VM_TEMPLATE |	\
			sed -e "s/@@LINUX_VSERVER_VM_NAME@@/$LINUX_VSERVER_VM_NAME/g" |	\
			sed -e "s/@@KERNEL_NAME@@/$resource_kernel/g" |	\
			sed -e "s/@@KERNEL_VERSION@@/$OPENQRM_KERNEL_VERSION/g" |	\
			sed -e "s/@@OPENQRM_RESOURCE_RAM@@/$LINUX_VSERVER_VM_RAM/g" |	\
			sed -e "s/@@OPENQRM_RESOURCE_ID@@/$OPENQRM_RESOURCE_ID/g" |	\
			sed -e "s/@@OPENQRM_RESOURCE_IP@@/$LINUX_VSERVER_VM_IP/g" |	\
			sed -e "s/@@OPENQRM_RESOURCE_MAC@@/$LINUX_VSERVER_VM_MAC/g" |	\
			sed -e "s/@@OPENQRM_SERVER_IP_ADDRESS@@/$resource_openqrmserver/g" | \
			sed -e "s/@@OPENQRM_LINUX_VSERVER_SUBNET_MASK@@/$OPENQRM_LINUX_VSERVER_SUBNET_MASK/g" | \
			sed -e "s/@@OPENQRM_LINUX_VSERVER_DEFAULT_GATEWAY@@/$OPENQRM_LINUX_VSERVER_DEFAULT_GATEWAY/g" \
			> /etc/linux-vserver/$LINUX_VSERVER_VM_NAME.cfg

		# disk + swap
		if [ "$LINUX_VSERVER_VM_DISK" != "" ] && [ "$LINUX_VSERVER_VM_SWAP" != "" ]; then
			echo "-> Creating disk + swap"
			mkdir -p $OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME
			dd if=/dev/zero of=$OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME/disk.img bs=1M count=$LINUX_VSERVER_VM_DISK
			mkfs.ext3 -F $OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME/disk.img
			dd if=/dev/zero of=$OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME/swap.img bs=1M count=$LINUX_VSERVER_VM_SWAP
			mkswap -f $OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME/swap.img
			cat >> /etc/linux-vserver/$LINUX_VSERVER_VM_NAME.cfg << EOF
root        = '/dev/hda1 ro'
disk        = [ 'file:$OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME/disk.img,hda1,w', 'file:$OPENQRM_VM_DIR/$LINUX_VSERVER_VM_NAME/swap.img,hda2,w' ]
EOF
		fi
		vserver $LINUX_VSERVER_VM_NAME start
		;;
	start)
		echo "Starting Linux-VServer vm $LINUX_VSERVER_VM_NAME"
		vserver $LINUX_VSERVER_VM_NAME start
		;;
	stop)
		echo "Stopping Linux-VServer vm $LINUX_VSERVER_VM_NAME"
		vserver $LINUX_VSERVER_VM_NAME stop
		;;
	reboot)
		echo "Rebooting Linux-VServer vm $LINUX_VSERVER_VM_NAME"
		vserver $LINUX_VSERVER_VM_NAME restart
		;;
	delete)
		echo "Removing Linux-VServer vm $LINUX_VSERVER_VM_NAME"
		vserver $LINUX_VSERVER_VM_NAME delete
		;;
	list)
		echo "Listing Linux-VServer vms"
		vserver-stat
		;;
	post_vm_list)
		echo "Posting vm list to the openQRM-server"
		VM_LIST_TMP=$resource_id.vm_list
		vserver-stat > $VM_LIST_TMP
		# add #'s at the beginning to make later parsing easier
		cat $VM_LIST_TMP | sed -e "s/^/#/g" > $VM_LIST_TMP.up
		mv -f $VM_LIST_TMP.up $VM_LIST_TMP
		echo "<br>Available inactive Linux-VServer vms :<br>" >> $VM_LIST_TMP
		ls /etc/vservers/ | grep -v newvserver-vars >> $VM_LIST_TMP
		if ! wget -q -O /dev/null --http-user=$LINUX_VSERVER_OPENQRM_USERNAME --http-password=$LINUX_VSERVER_OPENQRM_PASSWORD  --post-file=`$OPENQRM_POSTENCODE $VM_LIST_TMP` http://$resource_openqrmserver/openqrm/base/plugins/linux-vserver/linux-vserver-action.php?linux_vserver_command=get_linux_vserver; then
			echo "ERROR: Could not post vm list to the openQRM-server at $resource_openqrmserver!"
			echo "ERROR: Could not post vm list to the openQRM-server at $resource_openqrmserver!" | logger
		fi
		rm -f $VM_LIST_TMP
		rm -f $VM_LIST_TMP.post
		;;
	*)
		linux-vserver_usage
		;;


esac

