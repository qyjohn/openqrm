#!/bin/bash

# this script automatically manages vmware-esx
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/include/openqrm-plugin-vmware-esx-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/etc/openqrm-plugin-vmware-esx.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
openqrm_server_get_config
export resource_openqrmserver=$OPENQRM_SERVER_IP_ADDRESS

OPENQRM_VMWARE_ESX_VM_TEMPLATE="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/etc/templates/openqrm-vmware-esx-vm"
OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY="sleep 5"
export LANG=C

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	vmware_esx_log "ERROR: Please run this script as root!"
	exit 6
fi

if ! which screen 1>/dev/null; then
	vmware_esx_log "ERROR: The 'screen' utility is not installed! Please install and try again."
	exit 6
fi

function vmware_esx_usage() {
	vmware_esx_log "Usage : $0 start/stop/reboot/add/delete/remove/list <-i esx-server-ip> <-n vm-name>"
	vmware_esx_log "        $0 create <-i esx-server-ip> <-n vm-name> <-m mac-address> <-r memory> [-d disk-size ]"
	vmware_esx_log "        $0 setboot <-m mac-address> <-b local/net>"
	vmware_esx_log "        $0 post_vm_list"
	vmware_esx_log "        $0 init <-i esx-server-ip> [ -u openqrm-user ] [ -p openqrm-password ]"
	exit 1
}


# returns the full path the the vmx file of a vm
function vmware_esx_get_vmx() {
	local VM_NAME=$1
	local VMX=`$OPENQRM_ESX_CMD find /vmfs/volumes/* -name $VM_NAME.vmx`
	if [ "$VMX" == "" ]; then
		vmware_esx_log "ERROR: Could not find the vmx config file for the ESX vm $VM_NAME"
		openqrm_post_event 0 "vmware_esx_get_vmx" 3 "openqrm-vmware-esx" "Could not find the vmx config file for the ESX vm $VM_NAME!"
		return 1
	else
		echo $VMX
	fi	
}


# returns the esx vm id
function vmware_esx_get_vmid() {
	local VM_NAME=$1
	local VMID=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/getallvms | grep $VM_NAME.vmx | awk {' print $1 '}`
	if [ "$VMID" == "" ]; then
		vmware_esx_log "ERROR: Could not find the vm id for the ESX vm $VM_NAME"
		openqrm_post_event 0 "vmware_esx_get_vmid" 3 "openqrm-vmware-esx" "Could not find the vm id for the ESX vm $VM_NAME!"
		return 1
	else
		echo $VMID
	fi	
}



VMWARE_ESX_COMMAND=$1
# re-run in background via screen
if [ "$VMWARE_ESX_COMMAND" != "init" ]; then
	if [ "$RUN_IN_BACKGROUND" != "true" ]; then
		export RUN_IN_BACKGROUND=true
		SCREEN_NAME=`date +%T%x | sed -e "s/://g" | sed -e "s#/##g"`
		screen -dmS $SCREEN_NAME $0 $@
		exit	
	fi
fi

shift
while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			VMWARE_ESX_VM_NAME=$2
			shift
			;;
		-m)
			VMWARE_ESX_VM_MAC=$2
			shift
			;;
		-r)
			VMWARE_ESX_VM_RAM=$2
			shift
			;;
		-d)
			VMWARE_ESX_VM_DISK=$2
			shift
			;;
		-i)
			VMWARE_ESX_HOST_IP=$2
			shift
			;;
		-b)
			VMWARE_ESX_VM_BOOT=$2
			shift
			;;
		-u)
			OPENQRM_USERNAME=$2
			shift
			;;
		-p)
			OPENQRM_PASSWORD=$2
			shift
			;;
		*)
			vmware_esx_log "ERROR: Free commandline arguments are not allowed"
			vmware_esx_usage
			exit 6
			;;
	esac
	shift
done

# since esx is a pretty closed product without any linux api we are 
# using password-less ssh to configure and manage the vms via vim-cmd
# NOTICE: password-less ssh access as root from the openQRM server to the ESX host needs to be setup before as a requirement !
export OPENQRM_ESX_CMD="ssh $VMWARE_ESX_HOST_IP"
export OPENQRM_ESX_BACKGROUND_CMD="ssh -f $VMWARE_ESX_HOST_IP"
export VMWARE_ESX_HOST_IP

# main
if [ "$VMWARE_ESX_HOST_IP" == "" ]; then
	vmware_esx_usage
	openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "Wrong usage, ESX-host ip missing!"
fi
if [ "$VMWARE_ESX_COMMAND" == "" ]; then
	vmware_esx_usage
	openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "Wrong usage, no command given!"
fi

if [ "$VMWARE_ESX_COMMAND" != "list" ] && [ "$VMWARE_ESX_COMMAND" != "init" ] && [ "$VMWARE_ESX_COMMAND" != "setboot" ] && [ "$VMWARE_ESX_COMMAND" != "post_vm_list" ]; then
    if [ "$VMWARE_ESX_VM_NAME" == "" ]; then
        vmware_esx_usage
        openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "Wrong usage, vm name missing!"
    fi
fi

# here we check if a default datastore is set, if not we are trying to gather
# the first datastore from the ESX server and use that
if [ "$OPENQRM_VMWARE_ESX_DEFAULT_DATASTORE" != "" ]; then
    vmware_esx_log "Using $OPENQRM_VMWARE_ESX_DEFAULT_DATASTORE as the default datastore on VMware ESX Host $VMWARE_ESX_HOST_IP ! Configured in $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/etc/openqrm-plugin-vmware-esx.conf"
    OPENQRM_VM_DIR="/vmfs/volumes/$OPENQRM_VMWARE_ESX_DEFAULT_DATASTORE/"
else
    OPENQRM_VMWARE_ESX_DATASTORE=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND hostsvc/datastore/listsummary | grep "name =" | head -n1 | sed -e 's/,//g;s/"//g' | cut -d'=' -f2 | awk {' print $1 '}`
    if [ "$OPENQRM_VMWARE_ESX_DATASTORE" == "" ]; then
        vmware_esx_log "ERROR: Could not find a default datastore on VMware ESX Host $VMWARE_ESX_HOST_IP ! Please manually configure a default datastore in $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/etc/openqrm-plugin-vmware-esx.conf"
        openqrm_post_event 0 "default-datastore-setup" 3 "openqrm-vmware-esx" "Could not find a default datastore on VMware ESX Host $VMWARE_ESX_HOST_IP ! Please manually configure a default datastore in $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/etc/openqrm-plugin-vmware-esx.conf"
        exit 1
    else
        vmware_esx_log "Using $OPENQRM_VMWARE_ESX_DATASTORE as the default datastore on VMware ESX Host $VMWARE_ESX_HOST_IP ! You can manually set the default datastore in $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/etc/openqrm-plugin-vmware-esx.conf"
        OPENQRM_VM_DIR="/vmfs/volumes/$OPENQRM_VMWARE_ESX_DATASTORE/"
    fi
fi



case "$VMWARE_ESX_COMMAND" in 

	create)
		if [ "$VMWARE_ESX_VM_MAC" == "" ]; then
			vmware_esx_usage
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "Wrong usage, vm mac address missing!"
		fi
		if [ "$VMWARE_ESX_VM_RAM" == "" ]; then
			vmware_esx_usage
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "Wrong usage, vm ram missing!"
		fi
		vmware_esx_lock aquire
		vmware_esx_log "Creating VMware vm $VMWARE_ESX_VM_NAME"
		# creating the vmx

		mkdir -p /tmp/vmware-esx-plugin/$VMWARE_ESX_VM_NAME/
		cat $OPENQRM_VMWARE_ESX_VM_TEMPLATE |	\
			sed -e "s/@@VMWARE_ESX_VM_NAME@@/$VMWARE_ESX_VM_NAME/g" |	\
			sed -e "s/@@OPENQRM_RESOURCE_RAM@@/$VMWARE_ESX_VM_RAM/g" |	\
			sed -e "s/@@VMWARE_ESX_VM_MAC@@/$VMWARE_ESX_VM_MAC/g"	\
			> /tmp/vmware-esx-plugin/$VMWARE_ESX_VM_NAME/$VMWARE_ESX_VM_NAME.vmx
		# creating the dir first for the eventual disk
		$OPENQRM_ESX_CMD "mkdir -p $OPENQRM_VM_DIR/$VMWARE_ESX_VM_NAME/"

		# disk + swap
		if [ "$VMWARE_ESX_VM_DISK" != "" ]; then
			vmware_esx_log " Creating disk"
			$OPENQRM_ESX_CMD "vmkfstools -c $VMWARE_ESX_VM_DISK""M -a lsilogic $OPENQRM_VM_DIR/$VMWARE_ESX_VM_NAME/$VMWARE_ESX_VM_NAME.vmdk"  | logger
			# add the disk to the config file
			cat >> /tmp/vmware-esx-plugin/$VMWARE_ESX_VM_NAME/$VMWARE_ESX_VM_NAME.vmx << EOF
scsi0:0.present = "true"
scsi0:0.fileName = "$VMWARE_ESX_VM_NAME.vmdk"
scsi0:0.deviceType = "scsi-hardDisk"
scsi0:0.redo = ""
EOF
		fi

		scp /tmp/vmware-esx-plugin/$VMWARE_ESX_VM_NAME/$VMWARE_ESX_VM_NAME.vmx $VMWARE_ESX_HOST_IP:$OPENQRM_VM_DIR/$VMWARE_ESX_VM_NAME/ | logger
		rm -rf /tmp/vmware-esx-plugin

		# register
		vmware_esx_log "Adding VMware vm $VMWARE_ESX_VM_NAME"
		VMX_CONFIG=`vmware_esx_get_vmx $VMWARE_ESX_VM_NAME`
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND solo/registervm $VMX_CONFIG | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
		REGISTERED=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/getallvms | grep "^$VMID "`
		if [ "$REGISTERED" == "" ]; then
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to register!"
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to register!"
		else
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID registerd,"
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID registered."
		fi
		# start
		vmware_esx_log "Starting VMware vm $VMWARE_ESX_VM_NAME"
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.on $VMID | logger
        # restart once to apply the changes to the vmx file
        $OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.off $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.on $VMID | logger
        # make sure it is really starting
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.on $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VM_STATE=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/get.summary $VMID | grep powerState`
		if echo $VM_STATE | grep poweredOn 1>/dev/null; then
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID starting."
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID starting."
		else
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to start."
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to start!"
		fi
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	add)
		vmware_esx_lock aquire
		vmware_esx_log "Adding VMware vm $VMWARE_ESX_VM_NAME"
		VMX_CONFIG=`vmware_esx_get_vmx $VMWARE_ESX_VM_NAME`
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND solo/registervm $VMX_CONFIG | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
		REGISTERED=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/getallvms | grep "^$VMID "`
		if [ "$REGISTERED" == "" ]; then
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to register!"
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to register!"
		else
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID registerd,"
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID registered."
		fi
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	start)
		vmware_esx_lock aquire
		vmware_esx_log "Starting VMware vm $VMWARE_ESX_VM_NAME"
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.on $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VM_STATE=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/get.summary $VMID | grep powerState`
		if echo $VM_STATE | grep poweredOn 1>/dev/null; then
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID starting."
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID starting."
		else
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to start."
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to start!"
		fi		
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	stop)
		vmware_esx_lock aquire
		vmware_esx_log "Stopping VMware vm $VMWARE_ESX_VM_NAME"
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.off $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VM_STATE=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/get.summary $VMID | grep powerState`
		if echo $VM_STATE | grep poweredOff 1>/dev/null; then
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID stopped"
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID stopped."
		else
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to stop"
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to stop!"
		fi		
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	reboot)
		vmware_esx_lock aquire
		vmware_esx_log "Rebooting VMware vm $VMWARE_ESX_VM_NAME"
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
        $OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.off $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.on $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VM_STATE=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/get.summary $VMID | grep powerState`
		if echo $VM_STATE | grep poweredOn 1>/dev/null; then
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID starting."
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID starting."
		else
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to start."
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to start!"
		fi
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	remove)
		vmware_esx_lock aquire
		vmware_esx_log "Removing VMware vm $VMWARE_ESX_VM_NAME"
		VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
		# make sure it is stopped
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.off $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		# unregister
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/unregister $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		REGISTERED=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/getallvms | grep "^$VMID "`
		if [ "$REGISTERED" == "" ]; then
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID unregisterd"
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID unregistered."
		else
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to unregister"
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to unregister!"
		fi
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	delete)
		vmware_esx_lock aquire
		vmware_esx_log "Deleting VMware vm $VMWARE_ESX_VM_NAME"
		VMX_CONFIG=`vmware_esx_get_vmx $VMWARE_ESX_VM_NAME`
		# make sure it is registered so we can destroy it via its id
		FOUND_VMID=true
		while ! vmware_esx_get_vmid $VMWARE_ESX_VM_NAME; do
			$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND solo/registervm $VMX_CONFIG | logger
			$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
			VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
			DEL_LOOP=$(( DEL_LOOP + 1 ))
			if [ "$DEL_LOOP" == "3" ]; then
				FOUND_VMID=false
				break
			fi
		done
		if [ "$FOUND_VMID" == "true" ]; then
			VMID=`vmware_esx_get_vmid $VMWARE_ESX_VM_NAME`
			$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/destroy $VMID | logger
			vmware_esx_log openqrm-vmware-esx "NOTICE: Removed $VMWARE_ESX_VM_NAME/$VMID from ESX-host."
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "Removed $VMWARE_ESX_VM_NAME/$VMID from ESX-host."
		else
			# remove hard
			$OPENQRM_ESX_CMD "rm -rf /vmfs/volumes/$OPENQRM_VMWARE_ESX_DEFAULT_DATASTORE/$VMWARE_ESX_VM_NAME"
			vmware_esx_log openqrm-vmware-esx "WARNING: Force remove of unregistered vm $VMWARE_ESX_VM_NAME!"
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "Force remove of unregistered vm $VMWARE_ESX_VM_NAME!"
		fi
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;

        list)
        $OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/getallvms
        ;;

	post_vm_list)
		vmware_esx_log "Listing VMware vms"
		mkdir -p $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/web/vmware-esx-stat/
		chmod 777 $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/web/vmware-esx-stat/
		ESX_STATS="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/web/vmware-esx-stat/$VMWARE_ESX_HOST_IP.vm_list"
		ESX_STATS_TMP="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/web/vmware-esx-stat/$VMWARE_ESX_HOST_IP.vm_list.tmp"
        rm -f $ESX_STATS
        > $ESX_STATS_TMP
        for VMID in `$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/getallvms | grep -v Vmid | awk {' print $1 '}`; do
            VM_TMPFILE=`mktemp /tmp/oq-vm.XXXXXX` || exit 1
            $OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/get.summary $VMID > $VM_TMPFILE
            # name
            VM_NAME=`grep "name =" $VM_TMPFILE | cut -d '"' -f2`
            # state
            VM_STATE=`grep "powerState =" $VM_TMPFILE | cut -d '"' -f2`
            # mem
            VM_MEM=`grep "memorySizeMB =" $VM_TMPFILE | cut -d '=' -f2 | sed -e "s/,//g" | awk {' print $1 '}`
            # cpu
            VM_CPU=`grep "numCpu =" $VM_TMPFILE | cut -d '=' -f2 | sed -e "s/,//g" | awk {' print $1 '}`
            # nics
            VM_NET=`grep "numEthernetCards =" $VM_TMPFILE | cut -d '=' -f2 | sed -e "s/,//g" | awk {' print $1 '}`
            # disks
            VM_DISK=`grep "numVirtualDisks =" $VM_TMPFILE | cut -d '=' -f2 | sed -e "s/,//g" | awk {' print $1 '}`
            # mac
            $OPENQRM_ESX_CMD "grep 'ethernet0.address =' $OPENQRM_VM_DIR/$VM_NAME/$VM_NAME.vmx" > $VM_TMPFILE
            VM_MAC=`grep "ethernet0.address =" $VM_TMPFILE | cut -d '"' -f2`
            echo "$VMID""@""$VM_NAME""@""$VM_MAC""@""$VM_STATE""@""$VM_MEM""@""$VM_CPU""@""$VM_NET""@""$VM_DISK" >> $ESX_STATS_TMP
            rm -f $VM_TMPFILE
        done
        /bin/mv $ESX_STATS_TMP $ESX_STATS
        chmod 777 $ESX_STATS
		;;


	setboot)
       unset VMWARE_ESX_VM_NAME
		if [ "$VMWARE_ESX_VM_MAC" == "" ]; then
			vmware-server2_usage
		fi
		if [ "$VMWARE_ESX_VM_BOOT" == "" ]; then
			vmware-server2_usage
		fi
		if [ "$VMWARE_ESX_HOST_IP" == "" ]; then
            echo "ERROR: VMWARE_ESX_HOST_IP is empty" | logger
			vmware_esx_usage
		fi
		vmware_esx_lock aquire
		vmware_esx_log "Setting vm with mac $VMWARE_ESX_VM_MAC to boot from $VMWARE_ESX_VM_BOOT"
        # this command is is running from the openQRM engine which does
        # not know about the vm-name
        ESX_STATS="$OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/web/vmware-esx-stat/$VMWARE_ESX_HOST_IP.vm_list"
        if [ ! -f "$ESX_STATS" ]; then
            $0 post_vm_list -i $VMWARE_ESX_HOST_IP
        fi
        if [ ! -f "$ESX_STATS" ]; then
            vmware_esx_log "Could not get a VM list for VMware Server 2 $VMWARE_ESX_HOST_IP"
            exit 1
        fi
        VMID=`cat $ESX_STATS | grep $VMWARE_ESX_VM_MAC | cut -d'@' -f1`
        if [ "$VMID" == "" ]; then
    		vmware_esx_log "Cloud not find a registerd VMware Server 2 vm with mac $VMWARE_ESX_VM_MAC on this host"
            vmware_esx_lock release
            exit 1
        fi
        case "$VMWARE_ESX_VM_BOOT" in
            local)
        		vmware_esx_log "Setting VMware-Server 2 vm $VMID with mac $VMWARE_ESX_VM_MAC to local-boot"
                ;;
            net)
        		vmware_esx_log "Setting VMware-Server 2 vm $VMID with mac $VMWARE_ESX_VM_MAC to net-boot"
                ;;
        esac
		# hard restart it to apply its configuration
        # we do it here because the openQRM server engine does not
        # know anything about the vm name to restart it later
		vmware_esx_log "Restarting VMware Server 2 vm $VMID"
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.off $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/power.on $VMID | logger
		$OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
		VM_STATE=`$OPENQRM_ESX_CMD $OPENQRM_VMWARE_ESX_VM_COMMAND vmsvc/get.summary $VMID | grep powerState`
		if echo $VM_STATE | grep poweredOn 1>/dev/null; then
			vmware_esx_log openqrm-vmware-esx "NOTICE: ESX vm $VMID starting."
			openqrm_post_event 0 "parameter_check" 5 "openqrm-vmware-esx" "ESX vm $VMID re-starting."
		else
			vmware_esx_log openqrm-vmware-esx "ERROR: ESX vm $VMID failed to start."
			openqrm_post_event 0 "parameter_check" 3 "openqrm-vmware-esx" "ESX vm $VMID failed to start!"
		fi
		vmware_esx_lock release
		;;


	init)
		vmware_esx_log "Initialyzing VMware ESX host $VMWARE_ESX_HOST_IP"
        if [ "$OPENQRM_USERNAME" == "" ]; then
            echo -n "-> Please give an openQRM user-name : "
            read OPENQRM_USERNAME
            echo
        fi
        if [ "$OPENQRM_PASSWORD" == "" ]; then
            echo -n "-> Please give the openQRM password for user $OPENQRM_USER : "
            read OPENQRM_PASSWORD
            echo
        fi
		vmware_esx_lock aquire
		scp $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/vmware-esx/bin/openqrm-vmware-esx-monitord $VMWARE_ESX_HOST_IP:/bin/ | logger
		$OPENQRM_ESX_CMD "chmod +x /bin/openqrm-vmware-esx-monitord"
		$OPENQRM_ESX_BACKGROUND_CMD "/bin/openqrm-vmware-esx-monitord start $OPENQRM_SERVER_IP_ADDRESS $VMWARE_ESX_HOST_IP $OPENQRM_USERNAME $OPENQRM_PASSWORD"
        $OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
        $OPENQRM_VMWARE_ESX_CMD_CHECK_DELAY
        # post_vm_list again
        $0 post_vm_list -i $VMWARE_ESX_HOST_IP
		vmware_esx_lock release
		;;
	*)
		vmware_esx_usage
		;;


esac

