#!/bin/bash
# this is the boot-service init script for the Xen-hosts

OPENQRM_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/xen/include/openqrm-plugin-xen-functions
if [ -f $OPENQRM_RESOURCE_PARAMETER_FILE ]; then
	. $OPENQRM_RESOURCE_PARAMETER_FILE
	OPENQRM_SERVER_IP=$resource_openqrmserver
	OPENQRM_INTERFACE=`ifconfig | grep $resource_mac | grep :oq | cut -d':' -f1`
elif [ -f $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf ]; then
	. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
	. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
	openqrm_server_get_config
	OPENQRM_SERVER_IP=$OPENQRM_SERVER_IP_ADDRESS
	OPENQRM_INTERFACE=$OPENQRM_SERVER_INTERFACE
	resource_kernel=xen
fi
LOCALBOOT=false
OPENQRM_UNWANTED_MODULES="cops.o ipddp.o ltpc.o hdlcdrv.o airo_cs.o aironet4500_cs.o airo.o axnet_cs.o fmvj18x_cs.o ibmtr_cs.o netwave_cs.o nmclan_cs.o pcnet_cs.o ray_cs.o smc91c92_cs.o wavelan_cs.o wvlan_cs.o xirc2ps_cs.o xircom_cb.o xircom_tulip_cb.o ppp_async.o ppp_deflate.o ppp_generic.o ppp_synctty.o wavelan.o wd.o winbond-840.o airo_cs.o airo.o hermes.o orinoco_cs.o orinoco.o orinoco_plx.o orinoco_old_cs.o cops.ko ipddp.ko ltpc.ko hdlcdrv.ko airo_cs.ko aironet4500_cs.ko airo.ko axnet_cs.ko fmvj18x_cs.ko ibmtr_cs.ko netwave_cs.ko nmclan_cs.ko pcnet_cs.ko ray_cs.ko smc91c92_cs.ko wavelan_cs.ko wvlan_cs.ko xirc2ps_cs.ko xircom_cb.ko xircom_tulip_cb.ko ppp_async.ko ppp_deflate.ko ppp_generic.ko ppp_synctty.ko wavelan.ko wd.ko winbond-840.ko airo_cs.ko airo.ko hermes.ko orinoco_cs.ko orinoco.ko orinoco_plx.ko orinoco_old_cs.ko de600.ko de620.ko defxx.ko depca.ko hp100.ko hp.ko hp-plus.ko ne3210.ko ne.ko netwave_cs.ko ipw2100.ko proteon.ko skisa.ko"

# only run on xen hosts
grep -q "control_d" /proc/xen/capabilities 2>/dev/null || exit 0

# do not start on the intitrd
if [ -f /etc/initrd-devices.conf ]; then
	exit 0
fi

function xen_start() {
	DIR_CURRENT=`pwd`
	echo "Starting the openQRM xen-plugin"
	xen_stop 1>/dev/null 2>&1

	
	# local-server resource	
	if [ "$OPENQRM_INTERFACE" == "" ]; then
		# we are doing a local boot and do not have an ethX:oq network device
		OPENQRM_INTERFACE=`ifconfig | grep $resource_mac | cut -d':' -f1 | grep ^eth | awk {' print $1 '}`
		LOCALBOOT=true
		if [ "$OPENQRM_INTERFACE" == "" ]; then
			echo "ERROR: Could not find out which network interface to use"
			return 1
		fi

	else
	# regular pxe-booted resource	
		# we are doing netboot + network deployment
		# create virtual interface for the bridge, we need to avoid xen restarting 
		# on the openQRM interface because this will make the net-mounted rootfs inaccessible
		$VETH -v $XEN_VIRTUAL_BRIDGE_NAME -e $OPENQRM_INTERFACE -m $PARTITION_MAC
		if [ -x /etc/xen/scripts/network-bridge ]; then
			/etc/xen/scripts/network-bridge start vifnum=0 bridge=xenbr0 netdev=$XEN_VIRTUAL_BRIDGE_NAME 
		fi
	fi


	# download the initrd-template
	rm -rf /var/openqrm/xen-kernel
	mkdir -p /var/openqrm/xen-kernel
	if ! wget -q -O /var/openqrm/xen-kernel/openqrm-initrd-default.tgz http://$OPENQRM_SERVER_IP/openqrm/boot-service/openqrm-initrd-default.tgz; then
		echo "ERROR: Could not download http://$OPENQRM_SERVER_IP/openqrm/boot-service/openqrm-initrd-default.tgz"
		return 1
	fi
	# download the linuxrc
	if ! wget -q -O /var/openqrm/xen-kernel/openqrm-linuxrc http://$OPENQRM_SERVER_IP/openqrm/boot-service/openqrm-linuxrc; then
		echo "ERROR: Could not download http://$OPENQRM_SERVER_IP/openqrm/boot-service/openqrm-linuxrc"
		return 1
	fi
	# create the initrd using the latest version of the available xen-kernel
	XEN_KERNEL_VERSION=`ls /lib/modules/ | grep xen | sort -r | head -n1`
	XEN_KERNEL_NAME="xen"

	mkdir -p /var/openqrm/xen-kernel/initrd
	mkdir -p /var/openqrm/xen-kernel/initrd/lib/modules/$XEN_KERNEL_VERSION
	for MODULE in `find /lib/modules/$XEN_KERNEL_VERSION/kernel/drivers/net -type f | grep -v wireless`; do
		MODULE_NAME=`echo $MODULE | sed -e "s/.*\///"`
		if ! echo $OPENQRM_UNWANTED_MODULES | grep $MODULE_NAME 1>/dev/null; then
			/bin/cp -f $MODULE /var/openqrm/xen-kernel/initrd/lib/modules/$XEN_KERNEL_VERSION
		fi
	done
	# unpack the initrd-template
	tar -C /var/openqrm/xen-kernel/initrd -xzf /var/openqrm/xen-kernel/openqrm-initrd-default.tgz
	cp /var/openqrm/xen-kernel/openqrm-linuxrc /var/openqrm/xen-kernel/initrd/init
	chmod +x /var/openqrm/xen-kernel/initrd/init
	# pack with cpio
	cd /var/openqrm/xen-kernel/initrd/
	find . | cpio -o -H newc | gzip -9 > /boot/initrd-openqrm-xen.img
	cd $DIR_CURRENT
	# copy the kernel
	cp -f /boot/vmlinuz-$XEN_KERNEL_VERSION /boot/vmlinuz-openqrm-xen
	cp -f /boot/System.map-$XEN_KERNEL_VERSION /boot/System.map-openqrm-xen


	# adjust Xen-config	and enable migration
	if [ -f /etc/xen/xend-config.sxp ]; then
		cat /etc/xen/xend-config.sxp |	\
			sed -e "s/^(xend-relocation-hosts-allow/#(xend-relocation-hosts-allow/g" |	\
			sed -e "s/^#(xend-relocation-hosts-allow '')/(xend-relocation-hosts-allow '')/g" |	\
			sed -e "s/^#(xend-relocation-port 8002)/(xend-relocation-port 8002)/g" |	\
			sed -e "s/^#(xend-relocation-address '')/(xend-relocation-address '')/g" > /tmp/xend-config.sxp.openqrm
		mv -f /tmp/xend-config.sxp.openqrm /etc/xen/xend-config.sxp
	fi
	# restart xen
	if [ -x /etc/init.d/xend ]; then
		/etc/init.d/xend stop
		/etc/init.d/xend start
	fi

}


function xen_stop() {
	echo "Stopping the openQRM xen-plugin"

	# stopping the virtual bridge in case we are netbooting
	# local-server resource	
	if [ "$OPENQRM_INTERFACE" == "" ]; then
		# we are doing a local boot and do not have an ethX:oq network device
		LOCALBOOT=true

	else
				
		# stop the bridge
		kill `ps ax | grep $XEN_VIRTUAL_BRIDGE_NAME | grep -v grep | awk {' print $1 '}` 2>/dev/null
		

	fi

}





case "$1" in
	start)
		xen_start
		;;
	stop)
		xen_stop
		;;
	restart)
		xen_stop
		sleep 1
		xen_start
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1

esac
exit $?













