#!/bin/bash
# this is a hook function for the kernel-creation phase
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#

function equallogic_storage_kernel_hook() {

	local KERNEL_NAME=$1
	local KERNEL_VERSION=$2
	local KERNEL_LOCATION=$3
	local KERNEL_TYPE=$4

	echo "equallogic-storage-plugin: Running equallogic_storage_kernel_hook $KERNEL_NAME $KERNEL_VERSION $KERNEL_LOCATION $KERNEL_TYPE"
	echo "equallogic-storage-plugin: Running equallogic_storage_kernel_hook $KERNEL_NAME $KERNEL_VERSION $KERNEL_LOCATION $KERNEL_TYPE" | logger

    # try to find the iscsid + iscsiadm util fitting to the created kernel
    if [ -x "$KERNEL_LOCATION/sbin/iscsid" ]; then
        cp -a $KERNEL_LOCATION/sbin/iscsid $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/iscsid.$KERNEL_NAME
        echo "equallogic-storage-plugin: Found iscsid at $KERNEL_LOCATION/sbin/iscsid. Coping to $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/iscsid.$KERNEL_NAME"
        echo "equallogic-storage-plugin: Found iscsid at $KERNEL_LOCATION/sbin/iscsid. Coping to $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/iscsid.$KERNEL_NAME" | logger
    fi
    if [ -x "$KERNEL_LOCATION/sbin/iscsiadm" ]; then
        cp -a $KERNEL_LOCATION/sbin/iscsiadm $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/iscsiadm.$KERNEL_NAME
        echo "equallogic-storage-plugin: Found iscsiadm at $KERNEL_LOCATION/sbin/iscsiadm. Coping to $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/iscsiadm.$KERNEL_NAME"
        echo "equallogic-storage-plugin: Found iscsiadm at $KERNEL_LOCATION/sbin/iscsiadm. Coping to $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/iscsiadm.$KERNEL_NAME" | logger
    fi

    # get e2fsc + resize2fs
    RESIZE_COMPONENTS=false
    RESIZE_TMP_DIR=`mktemp -d /tmp/XXXXXXXXXX` || exit 1
    mkdir -p $RESIZE_TMP_DIR/sbin $RESIZE_TMP_DIR/lib
    if [ -x "$KERNEL_LOCATION/sbin/e2fsck" ]; then
        cp -a $KERNEL_LOCATION/sbin/e2fsck $RESIZE_TMP_DIR/sbin/
        RESIZE_COMPONENTS=true
        echo "equallogic-storage-plugin: Found e2fsck at $KERNEL_LOCATION/sbin/e2fsck. Coping ..."
        echo "equallogic-storage-plugin: Found e2fsck at $KERNEL_LOCATION/sbin/e2fsck. Coping ..." | logger
    fi
    if [ -x "$KERNEL_LOCATION/sbin/resize2fs" ]; then
        cp -a $KERNEL_LOCATION/sbin/resize2fs $RESIZE_TMP_DIR/sbin/
        RESIZE_COMPONENTS=true
        echo "equallogic-storage-plugin: Found resize2fs at $KERNEL_LOCATION/sbin/resize2fs. Coping ..."
        echo "equallogic-storage-plugin: Found resize2fs at $KERNEL_LOCATION/sbin/resize2fs. Coping ..." | logger
    fi
    if [ "$RESIZE_COMPONENTS" == "true" ]; then
        THIS_DIR=`pwd`
        # copy libs
        cp -a $KERNEL_LOCATION/lib/libe2p.* $RESIZE_TMP_DIR/lib/
        cp -a $KERNEL_LOCATION/lib/libext2fs.* $RESIZE_TMP_DIR/lib/
        cd $RESIZE_TMP_DIR/
        rm -f $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/eq-resize.$KERNEL_NAME.tgz
        tar -czf $OPENQRM_SERVER_BASE_DIR/openqrm/web/boot-service/eq-resize.$KERNEL_NAME.tgz *
        cd $THIS_DIR
    fi
    rm -rf $RESIZE_TMP_DIR/sbin $RESIZE_TMP_DIR/lib
    rmdir $RESIZE_TMP_DIR

}

