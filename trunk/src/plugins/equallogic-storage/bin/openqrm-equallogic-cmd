#!/usr/bin/expect -f
#
# this is an expect script to automatically run commands on a equallogic-filer
#
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#

if {[llength $argv]<3} {
		send_user "usage: $argv0 <equallogic-ip> <equallogic-user> <equallogic-password> <command 1> [command 2] [command 3] [command 4]\n"
		send_user "do not forget to quote your commands!\n"
		exit
}

set EQUALLOGIC_IP [lindex $argv 0]
set EQUALLOGIC_USER [lindex $argv 1]
set EQUALLOGIC_PASSWORD [lindex $argv 2]
set EQUALLOGIC_CMD_1 [lindex $argv 3]
set EQUALLOGIC_CMD_2 [lindex $argv 4]
set EQUALLOGIC_CMD_3 [lindex $argv 5]
set EQUALLOGIC_CMD_4 [lindex $argv 6]


set force_conservative 0  ;# set to 1 to force conservative mode even if
						  ;# script wasn't run conservatively originally
if {$force_conservative} {
		set send_slow {1 .1}
		proc send {ignore arg} {
				sleep .1
				exp_send -s -- $arg
		}
}

set timeout 30
spawn /bin/bash
match_max 100000

# we set strict key checking to no to avoid yes/no prompts for key confirmation
send -- "ssh -o 'StrictHostKeyChecking no' $EQUALLOGIC_USER@$EQUALLOGIC_IP\r"

expect -ex "password"
send -- "$EQUALLOGIC_PASSWORD\r"
expect -ex ">"

send -- "stty hardwrap off\r"
expect -ex ">"

send -- "cli-settings paging off\r"
expect -ex ">"

send -- "cli-settings confirmation off\r"
expect -ex ">"

send -- "cli-settings events off\r"
expect -ex ">"

send -- "cli-settings displayinMB on\r"
expect -ex ">"

send -- "$EQUALLOGIC_CMD_1\r"

# check for multiple commands
if {$EQUALLOGIC_CMD_2 != ""} {
	send -- "$EQUALLOGIC_CMD_2\r"
}
# check for multiple commands
if {$EQUALLOGIC_CMD_2 != ""} {
	send -- "$EQUALLOGIC_CMD_3\r"
}
# check for multiple commands
if {$EQUALLOGIC_CMD_2 != ""} {
	send -- "$EQUALLOGIC_CMD_4\r"
}

expect -ex ">" {
	send -- "logout\r"
	send -- "\r"
}

expect {
	-ex "Do you really want to logout? (y/n) \[n\]" {
		send -- "y\r"
	}
	-ex "Connection to $EQUALLOGIC_IP closed." {
		exit
	}
	timeout {
		exit
	}
	eof {
		exit
	}
}




