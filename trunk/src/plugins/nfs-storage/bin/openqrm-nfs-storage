#!/bin/bash

# this script automatically manages nfs and iscsi on nfs
OPENQRM_SERVER_BASE_DIR=$(dirname $0)/../../../..
OPENQRM_SERVER_BASE_DIR=$(pushd $OPENQRM_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/nfs-storage/include/openqrm-plugin-nfs-storage-functions
OPENQRM_POSTENCODE="$OPENQRM_SERVER_BASE_DIR/openqrm/sbin/openqrm-postencode.py"
if [ -f $OPENQRM_RESOURCE_PARAMETER_FILE ]; then
	. $OPENQRM_RESOURCE_PARAMETER_FILE
	OPENQRM_SERVER_IP=$resource_openqrmserver
	OPENQRM_EXEC_PORT=$resource_execdport
elif [ -f $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf ]; then
	. $OPENQRM_SERVER_BASE_DIR/openqrm/etc/openqrm-server.conf
	. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-server-functions
	openqrm_server_get_config
	OPENQRM_SERVER_IP=$OPENQRM_SERVER_IP_ADDRESS
	resource_id=0
	resource_openqrmserver=$OPENQRM_SERVER_IP_ADDRESS
fi
export LANG=C

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

if ! which screen 1>/dev/null; then
	echo "ERROR: The 'screen' utility is not installed! Please install and try again."
	nfs_storage_log "ERROR: The 'screen' utility is not installed! Please install and try again."
	exit 6
fi

# re-run in background via screen
if [ "$RUN_IN_BACKGROUND" != "true" ]; then
	export RUN_IN_BACKGROUND=true
	SCREEN_NAME=`date +%T%x | sed -e "s/://g" | sed -e "s#/##g"`
	screen -dmS $SCREEN_NAME $0 $@
	exit	
fi


function nfs_storage_usage() {
	echo "Usage : $0 add/remove/snap/list <-n image-name>"
	echo "             [-s image-snapshot-name]"
	echo "        $0 auth <-r image-rootdevice> <-i ip-address>"
	echo "        $0 post_exports <-u username> <-p password>"
	echo "        $0 post_identifier <-u username> <-p password>"
	exit 1
}


NFS_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			NFS_IMAGE_NAME=$2
			shift
			;;
		-s)
			NFS_IMAGE_SNAPSHOT_NAME=$2
			shift
			;;
		-i)
			NFS_IMAGE_AUTH_IP=$2
			shift
			;;
		-r)
			NFS_IMAGE_ROOTDEVICE=$2
			shift
			;;
		-u)
			NFS_OPENQRM_USERNAME=$2
			shift
			;;
		-p)
			NFS_OPENQRM_PASSWORD=$2
			shift
			;;
		*)
			echo "ERROR: Free commandline arguments are not allowed"
			nfs_storage_usage
			exit 6
			;;
	esac
	shift
done




# main
if [ "$NFS_COMMAND" == "" ]; then
	nfs_storage_usage
fi

if [ "$NFS_COMMAND" == "post_exports" ]  || [ "$NFS_COMMAND" == "post_identifier" ]; then
	if [ "$NFS_OPENQRM_USERNAME" == "" ]; then
		nfs_storage_usage
	fi
	if [ "$NFS_OPENQRM_PASSWORD" == "" ]; then
		nfs_storage_usage
	fi
else
	if [ "$NFS_COMMAND" != "list" ] && [ "$NFS_COMMAND" != "auth" ]; then
		if [ "$NFS_IMAGE_NAME" == "" ]; then
			nfs_storage_usage
		fi
	fi
fi

case "$NFS_COMMAND" in 

	add)
		echo -n "Creating NFS export for image $NFS_IMAGE_NAME"
		# add to exports
		nfs_storage_lock aquire
		manage_nfs add $OPENQRM_SERVER_IP
		nfs_storage_lock release
		# in case we have a username + password post the updated list to the openQRM-server
		if [ "$NFS_OPENQRM_USERNAME" != "" ] && [ "$NFS_OPENQRM_PASSWORD" != "" ]; then
			$0 post_exports -u $NFS_OPENQRM_USERNAME -p $NFS_OPENQRM_PASSWORD
		fi
		;;

	remove)
		echo -n "Removing NFS export for image $NFS_IMAGE_NAME"
		nfs_storage_lock aquire
		manage_nfs remove
		nfs_storage_lock release
		if [ "$NFS_OPENQRM_USERNAME" != "" ] && [ "$NFS_OPENQRM_PASSWORD" != "" ]; then
			$0 post_exports -u $NFS_OPENQRM_USERNAME -p $NFS_OPENQRM_PASSWORD
		fi
		;;

	snap)
		if [ "$NFS_IMAGE_SNAPSHOT_NAME" == "" ]; then
			echo "ERROR: Please give a name for the snapshot using the -s cmdline parmeter"
			echo
			nfs_storage_usage
		fi
		
		# check that source fs-images exist
		if [ ! -d $NFS_STORAGE_SERVER_IMAGE_DIRECTORY/$NFS_IMAGE_NAME ]; then
			echo "ERROR: Could not find source image $NFS_STORAGE_SERVER_IMAGE_DIRECTORY/$NFS_IMAGE_NAME on the storage-server"
			exit 1
		fi
		echo -n "Creating snapshot from image $NFS_IMAGE_NAME -> $NFS_IMAGE_SNAPSHOT_NAME"
		mkdir -p $NFS_STORAGE_SERVER_IMAGE_DIRECTORY/$NFS_IMAGE_SNAPSHOT_NAME
		nfs_storage_lock aquire
		export ORG_IMAGE_NAME=$NFS_IMAGE_NAME
		export NFS_IMAGE_NAME=$NFS_IMAGE_SNAPSHOT_NAME
		manage_nfs add $OPENQRM_SERVER_IP
		nfs_storage_lock release
		rsync -a $NFS_STORAGE_SERVER_IMAGE_DIRECTORY/$ORG_IMAGE_NAME/* $NFS_STORAGE_SERVER_IMAGE_DIRECTORY/$NFS_IMAGE_SNAPSHOT_NAME/
		if [ "$NFS_OPENQRM_USERNAME" != "" ] && [ "$NFS_OPENQRM_PASSWORD" != "" ]; then
			$0 post_exports -u $NFS_OPENQRM_USERNAME -p $NFS_OPENQRM_PASSWORD
		fi
		;;

	auth)
		echo -n "Authenticating NFS export $NFS_IMAGE_ROOTDEVICE to $NFS_IMAGE_AUTH_IP"
		# auth in exports
		nfs_storage_lock aquire
		manage_nfs auth $NFS_IMAGE_AUTH_IP
		nfs_storage_lock release
		# in case we have a username + password post the updated list to the openQRM-server
		if [ "$NFS_OPENQRM_USERNAME" != "" ] && [ "$NFS_OPENQRM_PASSWORD" != "" ]; then
			$0 post_exports -u $NFS_OPENQRM_USERNAME -p $NFS_OPENQRM_PASSWORD
		fi
		;;

	list)
		ls $NFS_STORAGE_SERVER_IMAGE_DIRECTORY
		;;
	post_exports)
		echo "Posting current nfs-exports to the openQRM-server"
		STORAGE_STATUS_TMP=$resource_id.nfs.stat
        # take care to only post "our" exports, e.g. not the ones from an lvm-nfs-storage
        cat /var/lib/nfs/etab | grep ^$NFS_STORAGE_SERVER_IMAGE_DIRECTORY | awk {' print $1"@"$2 '} | sed -e "s/<.*>//g" | sed -e "s/(.*)//g" > $STORAGE_STATUS_TMP
		if ! wget -q -O /dev/null --http-user=$NFS_OPENQRM_USERNAME --http-password=$NFS_OPENQRM_PASSWORD  --post-file=`$OPENQRM_POSTENCODE $STORAGE_STATUS_TMP` http://$OPENQRM_SERVER_IP/openqrm/base/plugins/nfs-storage/nfs-storage-action.php?nfs_storage_command=get_storage; then
			echo "ERROR: Could not post the nfs-export status to the openQRM-server at $resource_openqrmserver!"
			echo "ERROR: Could not post the nfs-export status to the openQRM-server at $resource_openqrmserver!" | logger
		fi
		rm -f $STORAGE_STATUS_TMP
		rm -f $STORAGE_STATUS_TMP.post
		;;
	post_identifier)
		echo "Posting current nfs-identifier to the openQRM-server"
		STORAGE_STATUS_TMP=$resource_id.nfs.ident
		> $STORAGE_STATUS_TMP
		for IMAGE_NAME in `cat /var/lib/nfs/etab | grep ^$NFS_STORAGE_SERVER_IMAGE_DIRECTORY | awk {' print $1 '} | sed -e "s/<.*>//g" | sed -e "s/(.*)//g"`; do
			echo "$IMAGE_NAME,$IMAGE_NAME" >> $STORAGE_STATUS_TMP
		done
		if ! wget -q -O /dev/null --http-user=$NFS_OPENQRM_USERNAME --http-password=$NFS_OPENQRM_PASSWORD  --post-file=`$OPENQRM_POSTENCODE $STORAGE_STATUS_TMP` http://$OPENQRM_SERVER_IP/openqrm/base/plugins/nfs-storage/nfs-storage-action.php?nfs_storage_command=get_ident; then
			echo "ERROR: Could not post the nfs-export status to the openQRM-server at $resource_openqrmserver!"
			echo "ERROR: Could not post the nfs-export status to the openQRM-server at $resource_openqrmserver!" | logger
		fi
		rm -f $STORAGE_STATUS_TMP
		rm -f $STORAGE_STATUS_TMP.post
		;;
	*)
		nfs_storage_usage
		;;


esac

