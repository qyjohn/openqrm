#!/bin/bash
# this is the boot-service init script for the sshterm resources
#
# This file is part of openQRM.
#
# openQRM is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2
# as published by the Free Software Foundation.
#
# openQRM is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with openQRM.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2009, Matthias Rechenburg <matt@openqrm.com>
#

OPENQRM_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
# for including the package functions
export OPENQRM_SOURCE_DIR="$OPENQRM_SERVER_BASE_DIR/openqrm/"
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/include/openqrm-package-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/sshterm/include/openqrm-plugin-sshterm-functions
. $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/sshterm/etc/openqrm-plugin-sshterm.conf
. $OPENQRM_RESOURCE_PARAMETER_FILE
# define wget to use with https
if [ "$openqrm_web_protocol" == "https" ]; then
	WGET_NO_CERT_CHECK="--no-check-certificate"
fi

# do not run on idle resources
if [ "$resource_image" == "idle" ]; then
	exit 0
fi
# also do not run before the real init of the rootfs
# if we have this file /etc/initrd-devices.conf we are still in the initrd
if [ -f /etc/initrd-devices.conf ]; then
	exit 0
fi


function sshterm_start() {
	echo "Starting the openQRM sshterm-plugin"
	local CURRENTDIR=`pwd`
	sshterm_stop 1>/dev/null 2>&1
	if ! which screen 1>/dev/null; then
		export FORCE_INSTALL=true
		openqrm_install_os_dependency screen
	fi
	if ! which openssl 1>/dev/null; then
		export FORCE_INSTALL=true
		openqrm_install_os_dependency openssl
	fi
	if [ -x /usr/bin/screen.real ]; then
		RUNSCREEN="/usr/bin/screen.real"
	else
		RUNSCREEN=`which screen`
	fi
	if [ -f /etc/debian_version ]; then
		if ! dpkg-query -s python-openssl 1>/dev/null 2>&1; then
			export FORCE_INSTALL=true
			openqrm_install_os_dependency python-openssl
		fi
	elif [ -f /etc/redhat-release ]; then
		if ! rpm -q pyOpenSSL 1>/dev/null 2>&1; then
			export FORCE_INSTALL=true
			openqrm_install_os_dependency pyOpenSSL
		fi
	elif [ -f /etc/SuSE-release ]; then
		if ! rpm -q python-openssl 1>/dev/null 2>&1; then
			export FORCE_INSTALL=true
			openqrm_install_os_dependency python-openssl
		fi
	fi
	# generate cert
	cd $OPENQRM_SERVER_BASE_DIR/openqrm/plugins/sshterm/webshell/
	if [ ! -f /root/.webshell/webshell.pem ]; then
		umask 077
		mkdir -p /root/.webshell/
		openssl req  -config "make_certificate.cfg" -keyout "/root/.webshell/webshell.pem" -newkey rsa:1024 -nodes -x509 -days 365 -out "/root/.webshell/webshell.pem"
	fi
	SCREEN_NAME=`date +%T%x | sed -e "s/://g" | sed -e "s#/##g"`
	$RUNSCREEN -dmS $SCREEN_NAME ./webshell.py --ssl-cert=/root/.webshell/webshell.pem
	cd $CURRENTDIR
	return 0
}


function sshterm_stop() {
	echo "Stopping the openQRM sshterm-plugin"
	WEBSHELL_PID=`ps ax | grep webshell.py | grep -v grep | awk {' print $1 '}`
	for PID in $WEBSHELL_PID; do
		kill $PID
	done
}



case "$1" in
	start)
		sshterm_start
		;;
	stop)
		sshterm_stop
		;;
	restart)
		sshterm_stop
		sleep 1
		sshterm_start
		;;
	*)
		echo "Usage: $0 {start|stop|restart|createcert}"
		exit 1

esac
exit $?













